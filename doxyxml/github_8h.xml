<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="github_8h" kind="file" language="C++">
    <compoundname>github.h</compoundname>
    <innerclass refid="structgithub__git__op__file" prot="public">github_git_op_file</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="github_8h_1a0ac9039edad787b93e1b2dfccd147a29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct github_git_op *</type>
        <definition>struct github_git_op* github_git_op_init</definition>
        <argsstring>(char *username, char *token, char *repo_config)</argsstring>
        <name>github_git_op_init</name>
        <param>
          <type>char *</type>
          <declname>username</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>token</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>repo_config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/github.h" line="10" column="1" declfile="/home/lucasmull/Trabalho/orca/github.h" declline="10" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="github_8h_1aa4ada68985aad19578b25c7593bbe620" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* github_git_op_update_my_fork</definition>
        <argsstring>(struct github_git_op *d)</argsstring>
        <name>github_git_op_update_my_fork</name>
        <param>
          <type>struct github_git_op *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/github.h" line="12" column="14" declfile="/home/lucasmull/Trabalho/orca/github.h" declline="12" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="github_8h_1abad78112d9686d18688d884f210d1cd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* github_git_op_get_head_commit</definition>
        <argsstring>(struct github_git_op *data)</argsstring>
        <name>github_git_op_get_head_commit</name>
        <param>
          <type>struct github_git_op *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/github.h" line="13" column="13" declfile="/home/lucasmull/Trabalho/orca/github.h" declline="13" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="github_8h_1a99422c2225ed0c63ac6cb037da5d11ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* github_git_op_get_tree_sha</definition>
        <argsstring>(struct github_git_op *data, char *commit_sha)</argsstring>
        <name>github_git_op_get_tree_sha</name>
        <param>
          <type>struct github_git_op *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>commit_sha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/github.h" line="14" column="13" declfile="/home/lucasmull/Trabalho/orca/github.h" declline="14" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="github_8h_1a64fe51e920cbbde92d703430bcaf74ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void github_git_op_create_blobs</definition>
        <argsstring>(struct github_git_op *data, struct github_git_op_file **files)</argsstring>
        <name>github_git_op_create_blobs</name>
        <param>
          <type>struct github_git_op *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct <ref refid="structgithub__git__op__file" kindref="compound">github_git_op_file</ref> **</type>
          <declname>files</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/github.h" line="15" column="13" declfile="/home/lucasmull/Trabalho/orca/github.h" declline="15" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="github_8h_1a6ff3f1a3fc5bf28aa4f486ffe1797010" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* github_git_op_create_tree</definition>
        <argsstring>(struct github_git_op *data, char *base_tree_sha, struct github_git_op_file **files)</argsstring>
        <name>github_git_op_create_tree</name>
        <param>
          <type>struct github_git_op *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>base_tree_sha</declname>
        </param>
        <param>
          <type>struct <ref refid="structgithub__git__op__file" kindref="compound">github_git_op_file</ref> **</type>
          <declname>files</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/github.h" line="16" column="13" declfile="/home/lucasmull/Trabalho/orca/github.h" declline="16" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="github_8h_1afeacad4f858395a7a28e6acd208b0471" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* github_git_op_create_a_commit</definition>
        <argsstring>(struct github_git_op *data, char *tree_sha, char *parent_commit_sha, char *commit_msg)</argsstring>
        <name>github_git_op_create_a_commit</name>
        <param>
          <type>struct github_git_op *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>tree_sha</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>parent_commit_sha</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>commit_msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/github.h" line="17" column="13" declfile="/home/lucasmull/Trabalho/orca/github.h" declline="17" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="github_8h_1a9a76059ddfe3a53bd8bb188d793e2669" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void github_git_op_create_a_branch</definition>
        <argsstring>(struct github_git_op *data, char *head_commit_sha, char *branch)</argsstring>
        <name>github_git_op_create_a_branch</name>
        <param>
          <type>struct github_git_op *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>head_commit_sha</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>branch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/github.h" line="18" column="13" declfile="/home/lucasmull/Trabalho/orca/github.h" declline="18" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="github_8h_1a9c78d44b4b839c45e326083982b3d79e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void github_git_op_update_a_commit</definition>
        <argsstring>(struct github_git_op *d, char *branch, char *commit_sha)</argsstring>
        <name>github_git_op_update_a_commit</name>
        <param>
          <type>struct github_git_op *</type>
          <declname>d</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>branch</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>commit_sha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/github.h" line="19" column="13" declfile="/home/lucasmull/Trabalho/orca/github.h" declline="19" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="github_8h_1a4311815456922d42dc4faa17d29649e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void github_git_op_create_a_pull_request</definition>
        <argsstring>(struct github_git_op *d, char *branch, char *pull_msg)</argsstring>
        <name>github_git_op_create_a_pull_request</name>
        <param>
          <type>struct github_git_op *</type>
          <declname>d</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>branch</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pull_msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/github.h" line="20" column="13" declfile="/home/lucasmull/Trabalho/orca/github.h" declline="20" declcolumn="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>GITHUB_V3_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GITHUB_V3_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="structgithub__git__op__file" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structgithub__git__op__file" kindref="compound">github_git_op_file</ref><sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sha;</highlight></codeline>
<codeline lineno="7"><highlight class="normal">};</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">github_git_op*</highlight></codeline>
<codeline lineno="10"><highlight class="normal">github_git_op_init(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*username,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*token,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*repo_config);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>github_git_op_update_my_fork(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>github_git_op<sp/>*d);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>github_git_op_get_head_commit(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>github_git_op<sp/>*data);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>github_git_op_get_tree_sha(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>github_git_op<sp/>*data,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*commit_sha);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>github_git_op_create_blobs(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>github_git_op<sp/>*data,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structgithub__git__op__file" kindref="compound">github_git_op_file</ref><sp/>**files);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>github_git_op_create_tree(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>github_git_op<sp/>*data,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*base_tree_sha,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structgithub__git__op__file" kindref="compound">github_git_op_file</ref><sp/>**files);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>github_git_op_create_a_commit(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>github_git_op<sp/>*data,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tree_sha,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*parent_commit_sha,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*commit_msg);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>github_git_op_create_a_branch(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>github_git_op<sp/>*data,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*head_commit_sha,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*branch);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>github_git_op_update_a_commit(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>github_git_op<sp/>*d,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*branch,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*commit_sha);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>github_git_op_create_a_pull_request(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>github_git_op<sp/>*d,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*branch,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pull_msg);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>GITHUB_V3_H</highlight></codeline>
    </programlisting>
    <location file="/home/lucasmull/Trabalho/orca/github.h"/>
  </compounddef>
</doxygen>
