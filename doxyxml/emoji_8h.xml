<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="emoji_8h" kind="file" language="C++">
    <compoundname>emoji.h</compoundname>
    <innerclass refid="structdiscord__emoji" prot="public">discord_emoji</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="emoji_8h_1a2a43aa930c1dcb2575720365c13be961" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_emoji_cleanup_v</definition>
        <argsstring>(void *p)</argsstring>
        <name>discord_emoji_cleanup_v</name>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="orca/specs-code/discord/emoji.h" line="66" column="13" declfile="orca/specs-code/discord/emoji.h" declline="66" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="emoji_8h_1a645466c24114cc94343e5106626f777d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_emoji_cleanup</definition>
        <argsstring>(struct discord_emoji *p)</argsstring>
        <name>discord_emoji_cleanup</name>
        <param>
          <type>struct <ref refid="structdiscord__emoji" kindref="compound">discord_emoji</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="orca/specs-code/discord/emoji.h" line="67" column="13" declfile="orca/specs-code/discord/emoji.h" declline="67" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="emoji_8h_1ab2fa2d501b6ce68269f5f293eab26e23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_emoji_init_v</definition>
        <argsstring>(void *p)</argsstring>
        <name>discord_emoji_init_v</name>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="orca/specs-code/discord/emoji.h" line="68" column="13" declfile="orca/specs-code/discord/emoji.h" declline="68" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="emoji_8h_1aca83eeecb96b4f1575a6d22a27df90ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_emoji_init</definition>
        <argsstring>(struct discord_emoji *p)</argsstring>
        <name>discord_emoji_init</name>
        <param>
          <type>struct <ref refid="structdiscord__emoji" kindref="compound">discord_emoji</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="orca/specs-code/discord/emoji.h" line="69" column="13" declfile="orca/specs-code/discord/emoji.h" declline="69" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="emoji_8h_1a203ecf384ca8cf22d7c76d8d5a594b61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structdiscord__emoji" kindref="compound">discord_emoji</ref> *</type>
        <definition>struct discord_emoji* discord_emoji_alloc</definition>
        <argsstring>()</argsstring>
        <name>discord_emoji_alloc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="orca/specs-code/discord/emoji.h" line="70" column="28" declfile="orca/specs-code/discord/emoji.h" declline="70" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="emoji_8h_1a605e53fc302044ec34d1fb69152b2c42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_emoji_free_v</definition>
        <argsstring>(void *p)</argsstring>
        <name>discord_emoji_free_v</name>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="orca/specs-code/discord/emoji.h" line="71" column="13" declfile="orca/specs-code/discord/emoji.h" declline="71" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="emoji_8h_1a34b45486e5f54f18ce3edac1f33c9682" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_emoji_free</definition>
        <argsstring>(struct discord_emoji *p)</argsstring>
        <name>discord_emoji_free</name>
        <param>
          <type>struct <ref refid="structdiscord__emoji" kindref="compound">discord_emoji</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="orca/specs-code/discord/emoji.h" line="72" column="13" declfile="orca/specs-code/discord/emoji.h" declline="72" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="emoji_8h_1acf1dbfd4bf8101972c62f44c0b48cafa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_emoji_from_json_v</definition>
        <argsstring>(char *json, size_t len, void *p)</argsstring>
        <name>discord_emoji_from_json_v</name>
        <param>
          <type>char *</type>
          <declname>json</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="orca/specs-code/discord/emoji.h" line="73" column="13" declfile="orca/specs-code/discord/emoji.h" declline="73" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="emoji_8h_1a5bacb79c5ddd86c9741264351c073a2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_emoji_from_json</definition>
        <argsstring>(char *json, size_t len, struct discord_emoji *p)</argsstring>
        <name>discord_emoji_from_json</name>
        <param>
          <type>char *</type>
          <declname>json</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>struct <ref refid="structdiscord__emoji" kindref="compound">discord_emoji</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="orca/specs-code/discord/emoji.h" line="74" column="13" declfile="orca/specs-code/discord/emoji.h" declline="74" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="emoji_8h_1ad3c2159ab8bd7375e3d1eeebaf7fabbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t discord_emoji_to_json_v</definition>
        <argsstring>(char *json, size_t len, void *p)</argsstring>
        <name>discord_emoji_to_json_v</name>
        <param>
          <type>char *</type>
          <declname>json</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="orca/specs-code/discord/emoji.h" line="75" column="15" declfile="orca/specs-code/discord/emoji.h" declline="75" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="emoji_8h_1a85c0ad91b128b3f8c931efb5ec2e9c3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t discord_emoji_to_json</definition>
        <argsstring>(char *json, size_t len, struct discord_emoji *p)</argsstring>
        <name>discord_emoji_to_json</name>
        <param>
          <type>char *</type>
          <declname>json</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>struct <ref refid="structdiscord__emoji" kindref="compound">discord_emoji</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="orca/specs-code/discord/emoji.h" line="76" column="15" declfile="orca/specs-code/discord/emoji.h" declline="76" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="emoji_8h_1a8bf659fb97ec382d49a562d8d1560eb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t discord_emoji_to_query_v</definition>
        <argsstring>(char *json, size_t len, void *p)</argsstring>
        <name>discord_emoji_to_query_v</name>
        <param>
          <type>char *</type>
          <declname>json</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="orca/specs-code/discord/emoji.h" line="77" column="15" declfile="orca/specs-code/discord/emoji.h" declline="77" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="emoji_8h_1af102fd4a580eef215e084f9d16408e3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t discord_emoji_to_query</definition>
        <argsstring>(char *json, size_t len, struct discord_emoji *p)</argsstring>
        <name>discord_emoji_to_query</name>
        <param>
          <type>char *</type>
          <declname>json</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>struct <ref refid="structdiscord__emoji" kindref="compound">discord_emoji</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="orca/specs-code/discord/emoji.h" line="78" column="15" declfile="orca/specs-code/discord/emoji.h" declline="78" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="emoji_8h_1a7eb19224088fc4efc89546848d9efc9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_emoji_list_free_v</definition>
        <argsstring>(void **p)</argsstring>
        <name>discord_emoji_list_free_v</name>
        <param>
          <type>void **</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="orca/specs-code/discord/emoji.h" line="79" column="13" declfile="orca/specs-code/discord/emoji.h" declline="79" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="emoji_8h_1ab25f3d28069bb21bc49f548502781573" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_emoji_list_free</definition>
        <argsstring>(struct discord_emoji **p)</argsstring>
        <name>discord_emoji_list_free</name>
        <param>
          <type>struct <ref refid="structdiscord__emoji" kindref="compound">discord_emoji</ref> **</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="orca/specs-code/discord/emoji.h" line="80" column="13" declfile="orca/specs-code/discord/emoji.h" declline="80" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="emoji_8h_1a2294db6bc84d51e92d81b5f0bf276585" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_emoji_list_from_json_v</definition>
        <argsstring>(char *str, size_t len, void *p)</argsstring>
        <name>discord_emoji_list_from_json_v</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="orca/specs-code/discord/emoji.h" line="81" column="13" declfile="orca/specs-code/discord/emoji.h" declline="81" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="emoji_8h_1acf06d9cd6e0cbc7f73ba9be55b2960a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_emoji_list_from_json</definition>
        <argsstring>(char *str, size_t len, struct discord_emoji ***p)</argsstring>
        <name>discord_emoji_list_from_json</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>struct <ref refid="structdiscord__emoji" kindref="compound">discord_emoji</ref> ***</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="orca/specs-code/discord/emoji.h" line="82" column="13" declfile="orca/specs-code/discord/emoji.h" declline="82" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="emoji_8h_1a009a608c54c27360b0cd54b3aae7aaf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t discord_emoji_list_to_json_v</definition>
        <argsstring>(char *str, size_t len, void *p)</argsstring>
        <name>discord_emoji_list_to_json_v</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="orca/specs-code/discord/emoji.h" line="83" column="15" declfile="orca/specs-code/discord/emoji.h" declline="83" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="emoji_8h_1a2192a104b815c8d1b417e0e437a0335d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t discord_emoji_list_to_json</definition>
        <argsstring>(char *str, size_t len, struct discord_emoji **p)</argsstring>
        <name>discord_emoji_list_to_json</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>struct <ref refid="structdiscord__emoji" kindref="compound">discord_emoji</ref> **</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="orca/specs-code/discord/emoji.h" line="84" column="15" declfile="orca/specs-code/discord/emoji.h" declline="84" declcolumn="15"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Specs generated file. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>cee-studio </para>
</simplesect>
<simplesect kind="date"><para>21 Jun 2021 </para>
</simplesect>
<simplesect kind="see"><para><ulink url="https://discord.com/developers/docs/resources/emoji">https://discord.com/developers/docs/resources/emoji</ulink> </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>This<sp/>file<sp/>is<sp/>generated<sp/>from<sp/>specs/discord/emoji.json,<sp/>Please<sp/>don&apos;t<sp/>edit<sp/>it.<sp/>*/</highlight></codeline>
<codeline lineno="17" refid="structdiscord__emoji" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdiscord__emoji" kindref="compound">discord_emoji</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>specs/discord/emoji.json:12:20</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>&apos;{<sp/>&quot;name&quot;:<sp/>&quot;id&quot;,<sp/>&quot;type&quot;:{<sp/>&quot;base&quot;:&quot;char&quot;,<sp/>&quot;dec&quot;:&quot;*&quot;,<sp/>&quot;converter&quot;:&quot;snowflake&quot;}}&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>id;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>specs/discord/emoji.json:13:20</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>&apos;{<sp/>&quot;name&quot;:<sp/>&quot;name&quot;,<sp/>&quot;type&quot;:{<sp/>&quot;base&quot;:&quot;char&quot;,<sp/>&quot;dec&quot;:&quot;*&quot;}}&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>specs/discord/emoji.json:14:20</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>&apos;{<sp/>&quot;name&quot;:<sp/>&quot;roles&quot;,<sp/>&quot;type&quot;:{<sp/>&quot;base&quot;:&quot;struct<sp/>discord_permissions_role&quot;,<sp/>&quot;dec&quot;:&quot;ntl&quot;},<sp/>&quot;option&quot;:true,</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;todo&quot;:true<sp/>}&apos;<sp/>*/</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>specs/discord/emoji.json:16:20</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>&apos;{<sp/>&quot;name&quot;:<sp/>&quot;user&quot;,<sp/>&quot;type&quot;:{<sp/>&quot;base&quot;:&quot;struct<sp/>discord_user&quot;,<sp/>&quot;dec&quot;:&quot;*&quot;<sp/>},<sp/>&quot;option&quot;:true<sp/>}&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="structdiscord__emoji_1a2f8f871daa760513aca81c79f0c9ad82" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdiscord__user" kindref="compound">discord_user</ref><sp/>*<ref refid="structdiscord__emoji_1a2f8f871daa760513aca81c79f0c9ad82" kindref="member">user</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>specs/discord/emoji.json:17:20</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>&apos;{<sp/>&quot;name&quot;:<sp/>&quot;require_colons&quot;,<sp/>&quot;type&quot;:{<sp/>&quot;base&quot;:&quot;bool&quot;<sp/>},<sp/>&quot;option&quot;:true}&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>require_colons;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>specs/discord/emoji.json:18:20</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>&apos;{<sp/>&quot;name&quot;:<sp/>&quot;managed&quot;,<sp/>&quot;type&quot;:{<sp/>&quot;base&quot;:&quot;bool&quot;<sp/>},<sp/>&quot;option&quot;:true}&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>managed;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>specs/discord/emoji.json:19:20</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>&apos;{<sp/>&quot;name&quot;:<sp/>&quot;animated&quot;,<sp/>&quot;type&quot;:{<sp/>&quot;base&quot;:&quot;bool&quot;<sp/>},<sp/>&quot;option&quot;:true}&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>animated;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>specs/discord/emoji.json:20:20</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>&apos;{<sp/>&quot;name&quot;:<sp/>&quot;available&quot;,<sp/>&quot;type&quot;:{<sp/>&quot;base&quot;:&quot;bool&quot;<sp/>},<sp/>&quot;option&quot;:true}&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>available;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>is<sp/>metadata<sp/>used<sp/>to<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>1.<sp/>control<sp/>which<sp/>field<sp/>should<sp/>be<sp/>extracted/injected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>2.<sp/>record<sp/>which<sp/>field<sp/>is<sp/>presented(defined)<sp/>in<sp/>JSON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>3.<sp/>record<sp/>which<sp/>field<sp/>is<sp/>null<sp/>in<sp/>JSON</highlight></codeline>
<codeline lineno="56"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable_arg_switches;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable_record_defined;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable_record_null;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg_switches[8];</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*record_defined[8];</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*record_null[8];</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}<sp/>__M;<sp/></highlight><highlight class="comment">//<sp/>metadata</highlight></codeline>
<codeline lineno="65"><highlight class="comment"></highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>discord_emoji_cleanup_v(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>discord_emoji_cleanup(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord__emoji" kindref="compound">discord_emoji</ref><sp/>*p);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>discord_emoji_init_v(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>discord_emoji_init(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord__emoji" kindref="compound">discord_emoji</ref><sp/>*p);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdiscord__emoji" kindref="compound">discord_emoji</ref><sp/>*<sp/>discord_emoji_alloc();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>discord_emoji_free_v(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>discord_emoji_free(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord__emoji" kindref="compound">discord_emoji</ref><sp/>*p);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>discord_emoji_from_json_v(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*json,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>discord_emoji_from_json(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*json,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord__emoji" kindref="compound">discord_emoji</ref><sp/>*p);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>discord_emoji_to_json_v(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*json,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>discord_emoji_to_json(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*json,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord__emoji" kindref="compound">discord_emoji</ref><sp/>*p);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>discord_emoji_to_query_v(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*json,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>discord_emoji_to_query(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*json,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord__emoji" kindref="compound">discord_emoji</ref><sp/>*p);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>discord_emoji_list_free_v(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**p);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>discord_emoji_list_free(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord__emoji" kindref="compound">discord_emoji</ref><sp/>**p);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>discord_emoji_list_from_json_v(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>discord_emoji_list_from_json(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord__emoji" kindref="compound">discord_emoji</ref><sp/>***p);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>discord_emoji_list_to_json_v(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>discord_emoji_list_to_json(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord__emoji" kindref="compound">discord_emoji</ref><sp/>**p);</highlight></codeline>
    </programlisting>
    <location file="orca/specs-code/discord/emoji.h"/>
  </compounddef>
</doxygen>
