<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="discord_8h" kind="file" language="C++">
    <compoundname>discord.h</compoundname>
    <includes local="no">stdbool.h</includes>
    <includes local="yes">json-actor-boxed.h</includes>
    <includes local="yes">logconf.h</includes>
    <includes local="yes">specs-code/discord/all_opaque_struct.h</includes>
    <includes local="yes">specs-code/discord/all_enums.h</includes>
    <includes local="yes">specs-code/discord/all_structs.h</includes>
    <includes local="yes">specs-code/discord/all_functions.h</includes>
    <includedby refid="specs_8h" local="yes">orca/common/specs.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>stdbool.h</label>
      </node>
      <node id="8">
        <label>specs-code/discord/all_functions.h</label>
      </node>
      <node id="3">
        <label>json-actor-boxed.h</label>
      </node>
      <node id="6">
        <label>specs-code/discord/all_enums.h</label>
      </node>
      <node id="4">
        <label>logconf.h</label>
      </node>
      <node id="7">
        <label>specs-code/discord/all_structs.h</label>
      </node>
      <node id="5">
        <label>specs-code/discord/all_opaque_struct.h</label>
      </node>
      <node id="1">
        <label>/home/lucasmull/Trabalho/orca/discord.h</label>
        <link refid="discord_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>orca/common/specs.h</label>
        <link refid="specs_8h_source"/>
      </node>
      <node id="1">
        <label>/home/lucasmull/Trabalho/orca/discord.h</label>
        <link refid="discord_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structdiscord__session" prot="public">discord_session</innerclass>
    <innerclass refid="structdiscord__get__channel__messages__params" prot="public">discord_get_channel_messages_params</innerclass>
    <innerclass refid="structdiscord__create__message__params" prot="public">discord_create_message_params</innerclass>
    <innerclass refid="structdiscord__edit__message__params" prot="public">discord_edit_message_params</innerclass>
    <innerclass refid="structdiscord__list__guild__members__params" prot="public">discord_list_guild_members_params</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="discord_8h_1a273fbb535b3d35f36c0f8ae9d57365a9" prot="public" static="no">
        <name>DISCORD_API_BASE_URL</name>
        <initializer>&quot;https://discord.com/api/v9&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="20" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="discord_8h_1aaa0b7cd0af2a896c3546ee54502717e0" prot="public" static="no">
        <name>DISCORD_GATEWAY_URL_SUFFIX</name>
        <initializer>&quot;?v=9&amp;encoding=json&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="21" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="discord_8h_1a61da4eaabe6beb2fcfb5925a5a030696" prot="public" static="no">
        <name>DISCORD_VOICE_CONNECTIONS_URL_SUFFIX</name>
        <initializer>&quot;?v=4&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="22" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="discord_8h_1af1dcfb8baeb87f34b18442cb46c18f42" prot="public" static="no">
        <name>SNOWFLAKE_INCREMENT</name>
        <initializer>12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="33" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="discord_8h_1a980db23686965819f6605e71c31fd721" prot="public" static="no">
        <name>SNOWFLAKE_PROCESS_ID</name>
        <initializer>17</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="34" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="discord_8h_1ad4f1454777b11d3af2a05a43c1f08e3e" prot="public" static="no">
        <name>SNOWFLAKE_INTERNAL_WORKER_ID</name>
        <initializer>22</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="35" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="discord_8h_1a37ad9a53ad21fae19d16f4336c55564b" prot="public" static="no">
        <name>SNOWFLAKE_TIMESTAMP</name>
        <initializer>64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="36" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="discord_8h_1afd709f201d7643c3909621f620ea648a" prot="public" static="no">
        <name>MAX_NAME_LEN</name>
        <initializer>100 + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="39" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="discord_8h_1a62f90ad17366b9e9c79f7737972cc609" prot="public" static="no">
        <name>MAX_TOPIC_LEN</name>
        <initializer>1024 + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="40" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="discord_8h_1a3886a61a4fb4b2574ffa9180b27d222f" prot="public" static="no">
        <name>MAX_DESCRIPTION_LEN</name>
        <initializer>2048 + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="41" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="discord_8h_1a6c4647395896246d6710ba980c31666c" prot="public" static="no">
        <name>MAX_USERNAME_LEN</name>
        <initializer>32 + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="42" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="discord_8h_1a0786b23978a93ab36b1f92aafa4c671a" prot="public" static="no">
        <name>MAX_DISCRIMINATOR_LEN</name>
        <initializer>4 + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="43" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="discord_8h_1ad526e349cbbf2fcab2057fff904ed09a" prot="public" static="no">
        <name>MAX_SHA256_LEN</name>
        <initializer>1024 + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="44" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="discord_8h_1ac8e231944220d56ab4be14ea600b1c9f" prot="public" static="no">
        <name>MAX_LOCALE_LEN</name>
        <initializer>16 + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="45" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="discord_8h_1a980191f11739df48037447c66d5595fd" prot="public" static="no">
        <name>MAX_EMAIL_LEN</name>
        <initializer>254 + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="46" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="discord_8h_1ac99b7f50b98b3ecc645859362df7e7c1" prot="public" static="no">
        <name>MAX_REGION_LEN</name>
        <initializer>16 + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="47" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="discord_8h_1aa78629e0c1309fd93a07631b53363335" prot="public" static="no">
        <name>MAX_REASON_LEN</name>
        <initializer>512 + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="48" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="discord_8h_1aa3fbd1b7db5563bc97af47943afa34a4" prot="public" static="no">
        <name>MAX_MESSAGE_LEN</name>
        <initializer>4000 + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="49" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="discord_8h_1a58fffb055ae1b24f4d84fbd5be4c9899" prot="public" static="no">
        <name>MAX_PAYLOAD_LEN</name>
        <initializer>4096 + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="50" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="discord_8h_1a9a915e9871f4197a54f4fae435b6cd1a" prot="public" static="no">
        <name>EMBED_TITLE_LEN</name>
        <initializer>256 + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="54" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="discord_8h_1acd6b301bc9ab4bdb2869fd40c4bdcb3f" prot="public" static="no">
        <name>EMBED_DESCRIPTION_LEN</name>
        <initializer>2048 + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="55" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="discord_8h_1aedbc7f60ea209f45d9b83bbb24ace840" prot="public" static="no">
        <name>EMBED_MAX_FIELDS</name>
        <initializer>25</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="56" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="discord_8h_1a07b2c9191d6d8c1da3ca45ae2cdb5f19" prot="public" static="no">
        <name>EMBED_FIELD_NAME_LEN</name>
        <initializer>256 + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="57" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="discord_8h_1ac5dc64401006966467092dc1ef1ceaf5" prot="public" static="no">
        <name>EMBED_FIELD_VALUE_LEN</name>
        <initializer>1024 + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="58" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="discord_8h_1ac39bd965a74b4cd6b1662d4631221068" prot="public" static="no">
        <name>EMBED_FOOTER_TEXT_LEN</name>
        <initializer>2048 + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="59" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="discord_8h_1a3fb0fc808afbd66f0f4cd16b036c47a3" prot="public" static="no">
        <name>EMBED_AUTHOR_NAME_LEN</name>
        <initializer>256 + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="60" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="discord_8h_1a47f5f63e7637cab01ab660239283f493" prot="public" static="no">
        <name>WEBHOOK_NAME_LEN</name>
        <initializer>80 + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="64" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="discord_8h_1a1b11a8fb0bb025f18e2b7b207979b314" prot="public" static="no" strong="no">
        <type></type>
        <name>discord_event_handling_mode</name>
        <enumvalue id="discord_8h_1a1b11a8fb0bb025f18e2b7b207979b314a175d5035ef61079f0ddd410b4dc9eaca" prot="public">
          <name>EVENT_IS_HANDLED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>this event has been handled </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="discord_8h_1a1b11a8fb0bb025f18e2b7b207979b314a3bd84c32d5d80fe2635d4629e407637e" prot="public">
          <name>EVENT_WILL_BE_HANDLED_IN_MAIN_THREAD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>handle this event in main thread </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="discord_8h_1a1b11a8fb0bb025f18e2b7b207979b314a2d6c7875eaa5d6caf320674bbe4392e4" prot="public">
          <name>EVENT_WILL_BE_HANDLED_IN_CHILD_THREAD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>handle this event in a child thread </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="644" column="33" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="644" bodyend="648"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="discord_8h_1a8c10c2449cb2148f47b8a032af96dd60" prot="public" static="no">
        <type>uint64_t</type>
        <definition>typedef uint64_t u64_unix_ms_t</definition>
        <argsstring></argsstring>
        <name>u64_unix_ms_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>unix time in ms </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="28" column="18" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" prot="public" static="no">
        <type>uint64_t</type>
        <definition>typedef uint64_t u64_snowflake_t</definition>
        <argsstring></argsstring>
        <name>u64_snowflake_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>snowflake datatype </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="32" column="18" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="discord_8h_1afc8f66a3993c5edb45a00ef997223d52" prot="public" static="no">
        <type>void()</type>
        <definition>typedef void() idle_cb(struct discord *client, const struct discord_user *bot)</definition>
        <argsstring>(struct discord *client, const struct discord_user *bot)</argsstring>
        <name>idle_cb</name>
        <briefdescription>
<para>Idle callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Runs on every WebSockets loop iteration, no trigger required <simplesect kind="see"><para><ref refid="discord_8h_1aa4499d5d0c24387a5acda0ea4be576ca" kindref="member">discord_set_on_idle()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="78" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="discord_8h_1a9d756b50a8f1472d73e3dcc32625aa93" prot="public" static="no">
        <type>void()</type>
        <definition>typedef void() event_raw_cb(struct discord *client, enum discord_gateway_events event, struct sized_buffer *sb_bot, struct sized_buffer *event_data)</definition>
        <argsstring>(struct discord *client, enum discord_gateway_events event, struct sized_buffer *sb_bot, struct sized_buffer *event_data)</argsstring>
        <name>event_raw_cb</name>
        <briefdescription>
<para>Raw Event callback. </para>
        </briefdescription>
        <detaileddescription>
<para>If activated, this callback is triggered on any event. It is executed after every other callback has been checked. <simplesect kind="see"><para>discord_set_on_raw_event() </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="87" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="discord_8h_1ad49541dbe38d41a0c6f72392511ffe7f" prot="public" static="no">
        <type>void()</type>
        <definition>typedef void() guild_role_cb(struct discord *client, const struct discord_user *bot, const u64_snowflake_t guild_id, const struct discord_permissions_role *role)</definition>
        <argsstring>(struct discord *client, const struct discord_user *bot, const u64_snowflake_t guild_id, const struct discord_permissions_role *role)</argsstring>
        <name>guild_role_cb</name>
        <briefdescription>
<para>Guild Role Create/Update callback. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://discord.com/developers/docs/topics/gateway#guilds">https://discord.com/developers/docs/topics/gateway#guilds</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="discord_8h_1a99c81095365d9fb50a9bdcad36421677" kindref="member">discord_set_on_guild_role_create()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="discord_8h_1a2cdda4d8b073432fc1b9a8d802fb090a" kindref="member">discord_set_on_guild_role_update()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="100" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="discord_8h_1a57231f38324853b103aaeead055fb668" prot="public" static="no">
        <type>void()</type>
        <definition>typedef void() guild_role_delete_cb(struct discord *client, const struct discord_user *bot, const u64_snowflake_t guild_id, const u64_snowflake_t role_id)</definition>
        <argsstring>(struct discord *client, const struct discord_user *bot, const u64_snowflake_t guild_id, const u64_snowflake_t role_id)</argsstring>
        <name>guild_role_delete_cb</name>
        <briefdescription>
<para>Guild Role Delete callback. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://discord.com/developers/docs/topics/gateway#guilds">https://discord.com/developers/docs/topics/gateway#guilds</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="discord_8h_1a3fbe3c1f243fdfd000095c8220656c29" kindref="member">discord_set_on_guild_role_delete()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="110" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="discord_8h_1a74d2fa7659645194427e13dc15490e45" prot="public" static="no">
        <type>void()</type>
        <definition>typedef void() guild_member_cb(struct discord *client, const struct discord_user *bot, const u64_snowflake_t guild_id, const struct discord_guild_member *member)</definition>
        <argsstring>(struct discord *client, const struct discord_user *bot, const u64_snowflake_t guild_id, const struct discord_guild_member *member)</argsstring>
        <name>guild_member_cb</name>
        <briefdescription>
<para>Guild Member Add/Update callback. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://discord.com/developers/docs/topics/gateway#guilds">https://discord.com/developers/docs/topics/gateway#guilds</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="discord_8h_1a42bcf77e80f22f330046ce410e907b63" kindref="member">discord_set_on_guild_member_add()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="discord_8h_1a6fa77e5994396e14a7c2a272b58a845a" kindref="member">discord_set_on_guild_member_update()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="122" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="discord_8h_1a22a5a8767f0b3e13675c765fdd439936" prot="public" static="no">
        <type>void()</type>
        <definition>typedef void() guild_member_remove_cb(struct discord *client, const struct discord_user *bot, const u64_snowflake_t guild_id, const struct discord_user *user)</definition>
        <argsstring>(struct discord *client, const struct discord_user *bot, const u64_snowflake_t guild_id, const struct discord_user *user)</argsstring>
        <name>guild_member_remove_cb</name>
        <briefdescription>
<para>Guild Member Remove callback. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://discord.com/developers/docs/topics/gateway#guilds">https://discord.com/developers/docs/topics/gateway#guilds</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="discord_8h_1af467bc80ddced49e63c0ab72020f97f3" kindref="member">discord_set_on_guild_member_remove()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="132" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="discord_8h_1a9e932235fc87b6fd16d5fccfa139edd6" prot="public" static="no">
        <type>void()</type>
        <definition>typedef void() guild_ban_cb(struct discord *client, const struct discord_user *bot, const u64_snowflake_t guild_id, const struct discord_user *user)</definition>
        <argsstring>(struct discord *client, const struct discord_user *bot, const u64_snowflake_t guild_id, const struct discord_user *user)</argsstring>
        <name>guild_ban_cb</name>
        <briefdescription>
<para>Guild Ban Add/Remove callback. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://discord.com/developers/docs/topics/gateway#guilds">https://discord.com/developers/docs/topics/gateway#guilds</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="discord_8h_1a94472926020ef36799062255db81bec3" kindref="member">discord_set_on_guild_ban_add()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="discord_8h_1a63c145f6ca3397795927f0e4ad09d93c" kindref="member">discord_set_on_guild_ban_remove()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="144" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="discord_8h_1afff2ce011cd5b8d20b703fb01c105559" prot="public" static="no">
        <type>void()</type>
        <definition>typedef void() message_cb(struct discord *client, const struct discord_user *bot, const struct discord_message *message)</definition>
        <argsstring>(struct discord *client, const struct discord_user *bot, const struct discord_message *message)</argsstring>
        <name>message_cb</name>
        <briefdescription>
<para>Message Create/Update callback. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://discord.com/developers/docs/topics/gateway#messages">https://discord.com/developers/docs/topics/gateway#messages</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="discord_8h_1a16522ff016965c092436ceedb1d6da97" kindref="member">discord_set_on_message_create()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="discord_8h_1a1bcf72b1836cbcd0ec8b197c156795cb" kindref="member">discord_set_on_message_update()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="156" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="discord_8h_1a29c06e8bef1e4a359d079d3ce5cb6b54" prot="public" static="no">
        <type>void()</type>
        <definition>typedef void() sb_message_cb(struct discord *client, const struct discord_user *bot, struct sized_buffer *sb_bot, const struct discord_message *message, struct sized_buffer *msg_payload)</definition>
        <argsstring>(struct discord *client, const struct discord_user *bot, struct sized_buffer *sb_bot, const struct discord_message *message, struct sized_buffer *msg_payload)</argsstring>
        <name>sb_message_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="159" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="discord_8h_1a1a03c333f0c96ccfe855460837c39640" prot="public" static="no">
        <type>void()</type>
        <definition>typedef void() message_delete_cb(struct discord *client, const struct discord_user *bot, const u64_snowflake_t id, const u64_snowflake_t channel_id, const u64_snowflake_t guild_id)</definition>
        <argsstring>(struct discord *client, const struct discord_user *bot, const u64_snowflake_t id, const u64_snowflake_t channel_id, const u64_snowflake_t guild_id)</argsstring>
        <name>message_delete_cb</name>
        <briefdescription>
<para>Message Delete callback. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://discord.com/developers/docs/topics/gateway#messages">https://discord.com/developers/docs/topics/gateway#messages</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="discord_8h_1a72c3f46afdb0cf603ba426ae08bcadab" kindref="member">discord_set_on_message_delete()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="171" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="discord_8h_1a875e7449cd237f26e535809bd0d5a3a8" prot="public" static="no">
        <type>void()</type>
        <definition>typedef void() message_delete_bulk_cb(struct discord *client, const struct discord_user *bot, const NTL_T(ja_u64) ids, const u64_snowflake_t channel_id, const u64_snowflake_t guild_id)</definition>
        <argsstring>(struct discord *client, const struct discord_user *bot, const NTL_T(ja_u64) ids, const u64_snowflake_t channel_id, const u64_snowflake_t guild_id)</argsstring>
        <name>message_delete_bulk_cb</name>
        <briefdescription>
<para>Message Delete Bulk callback. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://discord.com/developers/docs/topics/gateway#messages">https://discord.com/developers/docs/topics/gateway#messages</ulink> </para>
</simplesect>
<simplesect kind="see"><para>discord_set_on_message_delete_bulk() </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="182" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="discord_8h_1ad256daeaf95441e9bebba72ed7532c93" prot="public" static="no">
        <type>void()</type>
        <definition>typedef void() channel_cb(struct discord *client, const struct discord_user *bot, const struct discord_channel *channel)</definition>
        <argsstring>(struct discord *client, const struct discord_user *bot, const struct discord_channel *channel)</argsstring>
        <name>channel_cb</name>
        <briefdescription>
<para>Channel Create/Update/Delete callback. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://discord.com/developers/docs/topics/gateway#channels">https://discord.com/developers/docs/topics/gateway#channels</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="discord_8h_1af3e3e920824c65e23bcc47e62cf906c4" kindref="member">discord_set_on_channel_create()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="discord_8h_1a0c5c1e50ad4749a2dc7143030ef89d47" kindref="member">discord_set_on_channel_update()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="discord_8h_1a492b849d1661a82ff8ca16c3e829ddc6" kindref="member">discord_set_on_channel_delete()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="196" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="discord_8h_1aa1e842764ae5f29946ffb777407c531e" prot="public" static="no">
        <type>void()</type>
        <definition>typedef void() channel_pins_update_cb(struct discord *client, const struct discord_user *bot, const u64_snowflake_t guild_id, const u64_snowflake_t channel_id, const u64_unix_ms_t last_pin_timestamp)</definition>
        <argsstring>(struct discord *client, const struct discord_user *bot, const u64_snowflake_t guild_id, const u64_snowflake_t channel_id, const u64_unix_ms_t last_pin_timestamp)</argsstring>
        <name>channel_pins_update_cb</name>
        <briefdescription>
<para>Channel Pins Update callback. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://discord.com/developers/docs/topics/gateway#channels">https://discord.com/developers/docs/topics/gateway#channels</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="discord_8h_1ab6e438a4977ee90ddaef9593aa393c38" kindref="member">discord_set_on_channel_pins_update()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="205" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="discord_8h_1a51d3f330bfd81a53015878b954183142" prot="public" static="no">
        <type>void()</type>
        <definition>typedef void() message_reaction_add_cb(struct discord *client, const struct discord_user *bot, const u64_snowflake_t user_id, const u64_snowflake_t channel_id, const u64_snowflake_t message_id, const u64_snowflake_t guild_id, const struct discord_guild_member *member, const struct discord_emoji *emoji)</definition>
        <argsstring>(struct discord *client, const struct discord_user *bot, const u64_snowflake_t user_id, const u64_snowflake_t channel_id, const u64_snowflake_t message_id, const u64_snowflake_t guild_id, const struct discord_guild_member *member, const struct discord_emoji *emoji)</argsstring>
        <name>message_reaction_add_cb</name>
        <briefdescription>
<para>Message Reaction Add callback. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://discord.com/developers/docs/topics/gateway#messages">https://discord.com/developers/docs/topics/gateway#messages</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="discord_8h_1a9b6bf9e15ae6c2fe82f6c6bd1f4fc6c6" kindref="member">discord_set_on_message_reaction_add()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="216" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="discord_8h_1aa78388a1f092c880ef99029f1b383237" prot="public" static="no">
        <type>void()</type>
        <definition>typedef void() message_reaction_remove_cb(struct discord *client, const struct discord_user *bot, const u64_snowflake_t user_id, const u64_snowflake_t channel_id, const u64_snowflake_t message_id, const u64_snowflake_t guild_id, const struct discord_emoji *emoji)</definition>
        <argsstring>(struct discord *client, const struct discord_user *bot, const u64_snowflake_t user_id, const u64_snowflake_t channel_id, const u64_snowflake_t message_id, const u64_snowflake_t guild_id, const struct discord_emoji *emoji)</argsstring>
        <name>message_reaction_remove_cb</name>
        <briefdescription>
<para>Message Reaction Remove callback. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://discord.com/developers/docs/topics/gateway#messages">https://discord.com/developers/docs/topics/gateway#messages</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="discord_8h_1a76d53c80811f15b746ea0c9e13aac2e3" kindref="member">discord_set_on_message_reaction_remove()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="229" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="discord_8h_1a19d3292473ccf8bdd8dc15a8aa9e9b33" prot="public" static="no">
        <type>void()</type>
        <definition>typedef void() message_reaction_remove_all_cb(struct discord *client, const struct discord_user *bot, const u64_snowflake_t channel_id, const u64_snowflake_t message_id, const u64_snowflake_t guild_id)</definition>
        <argsstring>(struct discord *client, const struct discord_user *bot, const u64_snowflake_t channel_id, const u64_snowflake_t message_id, const u64_snowflake_t guild_id)</argsstring>
        <name>message_reaction_remove_all_cb</name>
        <briefdescription>
<para>Message Reaction Remove All callback. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://discord.com/developers/docs/topics/gateway#messages">https://discord.com/developers/docs/topics/gateway#messages</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="discord_8h_1a69dc994bf6f5131411341cc43622bc26" kindref="member">discord_set_on_message_reaction_remove_all()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="241" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="discord_8h_1aaf01e5b91be0bc56135d1a2d7bede82e" prot="public" static="no">
        <type>void()</type>
        <definition>typedef void() message_reaction_remove_emoji_cb(struct discord *client, const struct discord_user *bot, const u64_snowflake_t channel_id, const u64_snowflake_t message_id, const u64_snowflake_t guild_id, const struct discord_emoji *emoji)</definition>
        <argsstring>(struct discord *client, const struct discord_user *bot, const u64_snowflake_t channel_id, const u64_snowflake_t message_id, const u64_snowflake_t guild_id, const struct discord_emoji *emoji)</argsstring>
        <name>message_reaction_remove_emoji_cb</name>
        <briefdescription>
<para>Message Reaction Remove Emoji callback. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://discord.com/developers/docs/topics/gateway#messages">https://discord.com/developers/docs/topics/gateway#messages</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="discord_8h_1a2d213631154c13a336eb10ea607c775b" kindref="member">discord_set_on_message_reaction_remove_emoji()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="251" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="discord_8h_1a4734edb5ea9ea55094487d199227f943" prot="public" static="no">
        <type>void()</type>
        <definition>typedef void() voice_state_update_cb(struct discord *client, const struct discord_user *bot, const struct discord_voice_state *voice_state)</definition>
        <argsstring>(struct discord *client, const struct discord_user *bot, const struct discord_voice_state *voice_state)</argsstring>
        <name>voice_state_update_cb</name>
        <briefdescription>
<para>Voice State Update callback. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://discord.com/developers/docs/topics/gateway#voice">https://discord.com/developers/docs/topics/gateway#voice</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="discord_8h_1a5347137109bd6e433587c7fb10752c68" kindref="member">discord_set_on_voice_state_update()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="263" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="discord_8h_1aee86b0424b3c03c48b60fa99a0814d2f" prot="public" static="no">
        <type>void()</type>
        <definition>typedef void() voice_server_update_cb(struct discord *client, const struct discord_user *bot, const char *token, const u64_snowflake_t guild_id, const char *endpoint)</definition>
        <argsstring>(struct discord *client, const struct discord_user *bot, const char *token, const u64_snowflake_t guild_id, const char *endpoint)</argsstring>
        <name>voice_server_update_cb</name>
        <briefdescription>
<para>Voice Server Update callback. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ulink url="https://discord.com/developers/docs/topics/gateway#voice">https://discord.com/developers/docs/topics/gateway#voice</ulink> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="discord_8h_1ac43f3a0ac189d07a6b9a83c3dec48420" kindref="member">discord_set_on_voice_server_update()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="271" column="9" bodyfile="/home/lucasmull/Trabalho/orca/discord.h" bodystart="271" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="discord_8h_1a4df1c61716cd01011c7a7bde928a31ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_global_init</definition>
        <argsstring>()</argsstring>
        <name>discord_global_init</name>
        <briefdescription>
<para>Initialize resources of globals used by <ref refid="discord_8h" kindref="compound">discord.h</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="360" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="360" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1aee069a2483ef9bf92f56b492ebedf1d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_global_cleanup</definition>
        <argsstring>()</argsstring>
        <name>discord_global_cleanup</name>
        <briefdescription>
<para>Free resources of globals used by <ref refid="discord_8h" kindref="compound">discord.h</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="365" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="365" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a445cca7dc5a28113760c7e55759845c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
        <definition>struct discord* discord_init</definition>
        <argsstring>(const char token[])</argsstring>
        <name>discord_init</name>
        <param>
          <type>const char</type>
          <declname>token</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Create a Discord Client handle by its token. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>the bot token </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the newly created Discord Client handle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="373" column="15" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="373" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a23500a16c7afdb797c779b045ad20b10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
        <definition>struct discord* discord_config_init</definition>
        <argsstring>(const char config_file[])</argsstring>
        <name>discord_config_init</name>
        <param>
          <type>const char</type>
          <declname>config_file</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Create a Discord Client handle by a bot.config file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>config_file</parametername>
</parameternamelist>
<parameterdescription>
<para>the bot.config file name </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the newly created Discord Client handle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="381" column="15" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="381" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a009d0e352a30c00f8b4765712fcfa5a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_cleanup</definition>
        <argsstring>(struct discord *client)</argsstring>
        <name>discord_cleanup</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
<para>Free a Discord Client handle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>the client created with <ref refid="discord_8h_1a445cca7dc5a28113760c7e55759845c7" kindref="member">discord_init()</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="388" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="388" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1ad49194134d7b9e656d3a96cb0b60cfec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_add_intents</definition>
        <argsstring>(struct discord *client, enum discord_gateway_intents code)</argsstring>
        <name>discord_add_intents</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>enum discord_gateway_intents</type>
          <declname>code</declname>
        </param>
        <briefdescription>
<para>Subscribe to Discord Gateway events. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>the client created with <ref refid="discord_8h_1a445cca7dc5a28113760c7e55759845c7" kindref="member">discord_init()</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>the intents opcode, can be set as a bitmask operation (ex: A | B | C) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="https://discord.com/developers/docs/topics/gateway#gateway-intents">https://discord.com/developers/docs/topics/gateway#gateway-intents</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="397" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="397" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1ac6a9d904378b46a72c64ade07ac02f43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_remove_intents</definition>
        <argsstring>(struct discord *client, enum discord_gateway_intents code)</argsstring>
        <name>discord_remove_intents</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>enum discord_gateway_intents</type>
          <declname>code</declname>
        </param>
        <briefdescription>
<para>Unsubscribe from Discord Gateway events. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>the client created with <ref refid="discord_8h_1a445cca7dc5a28113760c7e55759845c7" kindref="member">discord_init()</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>the intents opcode, can be set as a bitmask operation (ex: A | B | C) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ulink url="https://discord.com/developers/docs/topics/gateway#gateway-intents">https://discord.com/developers/docs/topics/gateway#gateway-intents</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="407" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="407" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a13d9f16d62fea7cebdb6c24d57f685a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_set_prefix</definition>
        <argsstring>(struct discord *client, char *prefix)</argsstring>
        <name>discord_set_prefix</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>prefix</declname>
        </param>
        <briefdescription>
<para>Set a mandatory prefix before commands. </para>
        </briefdescription>
        <detaileddescription>
<para>Example: If @i help is a command and @i ! prefix is set, the command will only be validated if @i !help is sent <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>the client created with <ref refid="discord_8h_1a445cca7dc5a28113760c7e55759845c7" kindref="member">discord_init()</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prefix</parametername>
</parameternamelist>
<parameterdescription>
<para>the prefix that should accompany any command </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="discord_8h_1a996d04265f563d5be9c22cef411c11aa" kindref="member">discord_set_on_command()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="418" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="418" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a996d04265f563d5be9c22cef411c11aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_set_on_command</definition>
        <argsstring>(struct discord *client, char *command, message_cb *callback)</argsstring>
        <name>discord_set_on_command</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>command</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1afff2ce011cd5b8d20b703fb01c105559" kindref="member">message_cb</ref> *</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Set command/callback pair, the callback is triggered if someone types command in chat. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>the client created with <ref refid="discord_8h_1a445cca7dc5a28113760c7e55759845c7" kindref="member">discord_init()</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>the command to trigger the callback </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>the callback that will be executed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The command and any subjacent empty space is left out of discord_message::content </para>
</simplesect>
<simplesect kind="see"><para><ref refid="discord_8h_1a13d9f16d62fea7cebdb6c24d57f685a1" kindref="member">discord_set_prefix()</ref> for changing a command prefix </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="430" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="430" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a31400dfa84052b6c393c77a8039774f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_set_on_event_raw</definition>
        <argsstring>(struct discord *client, event_raw_cb *callback)</argsstring>
        <name>discord_set_on_event_raw</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1a9d756b50a8f1472d73e3dcc32625aa93" kindref="member">event_raw_cb</ref> *</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Set a callback that triggers on any event the client is subscribed to. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>the callback will be executed last, after every other has been checked </para>
</simplesect>
<simplesect kind="note"><para>this gives the raw JSON payload associated with the event </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>the client created with <ref refid="discord_8h_1a445cca7dc5a28113760c7e55759845c7" kindref="member">discord_init()</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>the callback that will be executed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="440" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="440" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1aa4499d5d0c24387a5acda0ea4be576ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_set_on_idle</definition>
        <argsstring>(struct discord *client, idle_cb *callback)</argsstring>
        <name>discord_set_on_idle</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1afc8f66a3993c5edb45a00ef997223d52" kindref="member">idle_cb</ref> *</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Set a callback that triggers at every event-loop iteration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>the client created with <ref refid="discord_8h_1a445cca7dc5a28113760c7e55759845c7" kindref="member">discord_init()</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>the callback that will be executed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="448" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="448" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a99c81095365d9fb50a9bdcad36421677" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_set_on_guild_role_create</definition>
        <argsstring>(struct discord *client, guild_role_cb *callback)</argsstring>
        <name>discord_set_on_guild_role_create</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1ad49541dbe38d41a0c6f72392511ffe7f" kindref="member">guild_role_cb</ref> *</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Set a callback that triggers when a guild role is created. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>the client created with <ref refid="discord_8h_1a445cca7dc5a28113760c7e55759845c7" kindref="member">discord_init()</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>the callback that will be executed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>this function will automatically set intent(s) to make the callback triggerable </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="457" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="457" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a2cdda4d8b073432fc1b9a8d802fb090a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_set_on_guild_role_update</definition>
        <argsstring>(struct discord *client, guild_role_cb *callback)</argsstring>
        <name>discord_set_on_guild_role_update</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1ad49541dbe38d41a0c6f72392511ffe7f" kindref="member">guild_role_cb</ref> *</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Set a callback that triggers when a guild role is updated. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>the client created with <ref refid="discord_8h_1a445cca7dc5a28113760c7e55759845c7" kindref="member">discord_init()</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>the callback that will be executed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>this function will automatically set intent(s) to make the callback triggerable </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="465" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="465" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a3fbe3c1f243fdfd000095c8220656c29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_set_on_guild_role_delete</definition>
        <argsstring>(struct discord *client, guild_role_delete_cb *callback)</argsstring>
        <name>discord_set_on_guild_role_delete</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1a57231f38324853b103aaeead055fb668" kindref="member">guild_role_delete_cb</ref> *</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Set a callback that triggers when a guild role is deleted. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>the client created with <ref refid="discord_8h_1a445cca7dc5a28113760c7e55759845c7" kindref="member">discord_init()</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>the callback that will be executed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>this function will automatically set intent(s) to make the callback triggerable </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="473" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="473" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a42bcf77e80f22f330046ce410e907b63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_set_on_guild_member_add</definition>
        <argsstring>(struct discord *client, guild_member_cb *callback)</argsstring>
        <name>discord_set_on_guild_member_add</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1a74d2fa7659645194427e13dc15490e45" kindref="member">guild_member_cb</ref> *</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Set a callback that triggers when a guild member is added. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>the client created with <ref refid="discord_8h_1a445cca7dc5a28113760c7e55759845c7" kindref="member">discord_init()</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>the callback that will be executed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>this function will automatically set intent(s) to make the callback triggerable </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="481" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="481" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a6fa77e5994396e14a7c2a272b58a845a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_set_on_guild_member_update</definition>
        <argsstring>(struct discord *client, guild_member_cb *callback)</argsstring>
        <name>discord_set_on_guild_member_update</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1a74d2fa7659645194427e13dc15490e45" kindref="member">guild_member_cb</ref> *</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Set a callback that triggers when a guild member is updated. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>the client created with <ref refid="discord_8h_1a445cca7dc5a28113760c7e55759845c7" kindref="member">discord_init()</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>the callback that will be executed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>this function will automatically set intent(s) to make the callback triggerable </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="489" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="489" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1af467bc80ddced49e63c0ab72020f97f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_set_on_guild_member_remove</definition>
        <argsstring>(struct discord *client, guild_member_remove_cb *callback)</argsstring>
        <name>discord_set_on_guild_member_remove</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1a22a5a8767f0b3e13675c765fdd439936" kindref="member">guild_member_remove_cb</ref> *</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Set a callback that triggers when a guild member is removed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>the client created with <ref refid="discord_8h_1a445cca7dc5a28113760c7e55759845c7" kindref="member">discord_init()</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>the callback that will be executed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>this function will automatically set intent(s) to make the callback triggerable </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="497" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="497" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a94472926020ef36799062255db81bec3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_set_on_guild_ban_add</definition>
        <argsstring>(struct discord *client, guild_ban_cb *callback)</argsstring>
        <name>discord_set_on_guild_ban_add</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1a9e932235fc87b6fd16d5fccfa139edd6" kindref="member">guild_ban_cb</ref> *</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Set a callback that triggers when a guild ban is added. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>the client created with <ref refid="discord_8h_1a445cca7dc5a28113760c7e55759845c7" kindref="member">discord_init()</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>the callback that will be executed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>this function will automatically set intent(s) to make the callback triggerable </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="505" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="505" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a63c145f6ca3397795927f0e4ad09d93c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_set_on_guild_ban_remove</definition>
        <argsstring>(struct discord *client, guild_ban_cb *callback)</argsstring>
        <name>discord_set_on_guild_ban_remove</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1a9e932235fc87b6fd16d5fccfa139edd6" kindref="member">guild_ban_cb</ref> *</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Set a callback that triggers when a guild ban is removed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>the client created with <ref refid="discord_8h_1a445cca7dc5a28113760c7e55759845c7" kindref="member">discord_init()</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>the callback that will be executed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>this function will automatically set intent(s) to make the callback triggerable </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="513" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="513" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1af3e3e920824c65e23bcc47e62cf906c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_set_on_channel_create</definition>
        <argsstring>(struct discord *client, channel_cb *callback)</argsstring>
        <name>discord_set_on_channel_create</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1ad256daeaf95441e9bebba72ed7532c93" kindref="member">channel_cb</ref> *</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Set a callback that triggers when a channel is created. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>the client created with <ref refid="discord_8h_1a445cca7dc5a28113760c7e55759845c7" kindref="member">discord_init()</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>the callback that will be executed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>this function will automatically set intent(s) to make the callback triggerable </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="521" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="521" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a0c5c1e50ad4749a2dc7143030ef89d47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_set_on_channel_update</definition>
        <argsstring>(struct discord *client, channel_cb *callback)</argsstring>
        <name>discord_set_on_channel_update</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1ad256daeaf95441e9bebba72ed7532c93" kindref="member">channel_cb</ref> *</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Set a callback that triggers when a channel is updated. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>the client created with <ref refid="discord_8h_1a445cca7dc5a28113760c7e55759845c7" kindref="member">discord_init()</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>the callback that will be executed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>this function will automatically set intent(s) to make the callback triggerable </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="529" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="529" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a492b849d1661a82ff8ca16c3e829ddc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_set_on_channel_delete</definition>
        <argsstring>(struct discord *client, channel_cb *callback)</argsstring>
        <name>discord_set_on_channel_delete</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1ad256daeaf95441e9bebba72ed7532c93" kindref="member">channel_cb</ref> *</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Set a callback that triggers when a channel is deleted. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>the client created with <ref refid="discord_8h_1a445cca7dc5a28113760c7e55759845c7" kindref="member">discord_init()</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>the callback that will be executed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>this function will automatically set intent(s) to make the callback triggerable </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="537" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="537" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1ab6e438a4977ee90ddaef9593aa393c38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_set_on_channel_pins_update</definition>
        <argsstring>(struct discord *client, channel_pins_update_cb *callback)</argsstring>
        <name>discord_set_on_channel_pins_update</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1aa1e842764ae5f29946ffb777407c531e" kindref="member">channel_pins_update_cb</ref> *</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Set a callback that triggers when some channel pins are updated. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>the client created with <ref refid="discord_8h_1a445cca7dc5a28113760c7e55759845c7" kindref="member">discord_init()</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>the callback that will be executed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>this function will automatically set intent(s) to make the callback triggerable </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="545" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="545" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a16522ff016965c092436ceedb1d6da97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_set_on_message_create</definition>
        <argsstring>(struct discord *client, message_cb *callback)</argsstring>
        <name>discord_set_on_message_create</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1afff2ce011cd5b8d20b703fb01c105559" kindref="member">message_cb</ref> *</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Set a callback that triggers when a message is created. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>the client created with <ref refid="discord_8h_1a445cca7dc5a28113760c7e55759845c7" kindref="member">discord_init()</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>the callback that will be executed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>this function will automatically set intent(s) to make the callback triggerable </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="553" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="553" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a677d85b0e6427b8631e83e90435542d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_set_on_sb_message_create</definition>
        <argsstring>(struct discord *client, sb_message_cb *callback)</argsstring>
        <name>discord_set_on_sb_message_create</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>sb_message_cb *</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="554" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="554" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a1bcf72b1836cbcd0ec8b197c156795cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_set_on_message_update</definition>
        <argsstring>(struct discord *client, message_cb *callback)</argsstring>
        <name>discord_set_on_message_update</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1afff2ce011cd5b8d20b703fb01c105559" kindref="member">message_cb</ref> *</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Set a callback that triggers when a message is updated. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>the client created with <ref refid="discord_8h_1a445cca7dc5a28113760c7e55759845c7" kindref="member">discord_init()</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>the callback that will be executed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>this function will automatically set intent(s) to make the callback triggerable </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="562" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="562" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a3d2be94a7782f8cd3377224119b28439" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_set_on_sb_message_update</definition>
        <argsstring>(struct discord *client, sb_message_cb *callback)</argsstring>
        <name>discord_set_on_sb_message_update</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>sb_message_cb *</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="563" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="563" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a72c3f46afdb0cf603ba426ae08bcadab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_set_on_message_delete</definition>
        <argsstring>(struct discord *client, message_delete_cb *callback)</argsstring>
        <name>discord_set_on_message_delete</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1a1a03c333f0c96ccfe855460837c39640" kindref="member">message_delete_cb</ref> *</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Set a callback that triggers when a message is deleted. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>the client created with <ref refid="discord_8h_1a445cca7dc5a28113760c7e55759845c7" kindref="member">discord_init()</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>the callback that will be executed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>this function will automatically set intent(s) to make the callback triggerable </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="571" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="571" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1ae43a88dc461e6284efba58665d80cc5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_set_on_message_delete_bulk</definition>
        <argsstring>(struct discord *client, message_delete_bulk_cb *callback)</argsstring>
        <name>discord_set_on_message_delete_bulk</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1a875e7449cd237f26e535809bd0d5a3a8" kindref="member">message_delete_bulk_cb</ref> *</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="579" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="579" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a9b6bf9e15ae6c2fe82f6c6bd1f4fc6c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_set_on_message_reaction_add</definition>
        <argsstring>(struct discord *client, message_reaction_add_cb *callback)</argsstring>
        <name>discord_set_on_message_reaction_add</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1a51d3f330bfd81a53015878b954183142" kindref="member">message_reaction_add_cb</ref> *</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Set a callback that triggers when a message reaction is added. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>the client created with <ref refid="discord_8h_1a445cca7dc5a28113760c7e55759845c7" kindref="member">discord_init()</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>the callback that will be executed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>this function will automatically set intent(s) to make the callback triggerable </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="587" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="587" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a76d53c80811f15b746ea0c9e13aac2e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_set_on_message_reaction_remove</definition>
        <argsstring>(struct discord *client, message_reaction_remove_cb *callback)</argsstring>
        <name>discord_set_on_message_reaction_remove</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1aa78388a1f092c880ef99029f1b383237" kindref="member">message_reaction_remove_cb</ref> *</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Set a callback that triggers when a message reaction is removed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>the client created with <ref refid="discord_8h_1a445cca7dc5a28113760c7e55759845c7" kindref="member">discord_init()</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>the callback that will be executed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>this function will automatically set intent(s) to make the callback triggerable </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="595" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="595" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a69dc994bf6f5131411341cc43622bc26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_set_on_message_reaction_remove_all</definition>
        <argsstring>(struct discord *client, message_reaction_remove_all_cb *callback)</argsstring>
        <name>discord_set_on_message_reaction_remove_all</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1a19d3292473ccf8bdd8dc15a8aa9e9b33" kindref="member">message_reaction_remove_all_cb</ref> *</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Set a callback that triggers when all reaction from some message is removed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>the client created with <ref refid="discord_8h_1a445cca7dc5a28113760c7e55759845c7" kindref="member">discord_init()</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>the callback that will be executed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>this function will automatically set intent(s) to make the callback triggerable </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="603" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="603" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a2d213631154c13a336eb10ea607c775b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_set_on_message_reaction_remove_emoji</definition>
        <argsstring>(struct discord *client, message_reaction_remove_emoji_cb *callback)</argsstring>
        <name>discord_set_on_message_reaction_remove_emoji</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1aaf01e5b91be0bc56135d1a2d7bede82e" kindref="member">message_reaction_remove_emoji_cb</ref> *</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Set a callback that triggers when all instances of a particular reaction from some message is removed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>the client created with <ref refid="discord_8h_1a445cca7dc5a28113760c7e55759845c7" kindref="member">discord_init()</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>the callback that will be executed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>this function will automatically set intent(s) to make the callback triggerable </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="611" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="611" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a23f17f54bfca2562a453ea58d49e91ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_set_on_ready</definition>
        <argsstring>(struct discord *client, idle_cb *callback)</argsstring>
        <name>discord_set_on_ready</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1afc8f66a3993c5edb45a00ef997223d52" kindref="member">idle_cb</ref> *</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Set a callback that triggers when the client is ready. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>the client created with <ref refid="discord_8h_1a445cca7dc5a28113760c7e55759845c7" kindref="member">discord_init()</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>the callback that will be executed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>this function will automatically set intent(s) to make the callback triggerable </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="619" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="619" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a5347137109bd6e433587c7fb10752c68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_set_on_voice_state_update</definition>
        <argsstring>(struct discord *client, voice_state_update_cb *callback)</argsstring>
        <name>discord_set_on_voice_state_update</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1a4734edb5ea9ea55094487d199227f943" kindref="member">voice_state_update_cb</ref> *</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Set a callback that triggers when a voice state is updated. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>the client created with <ref refid="discord_8h_1a445cca7dc5a28113760c7e55759845c7" kindref="member">discord_init()</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>the callback that will be executed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>this function will automatically set intent(s) to make the callback triggerable </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="627" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="627" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1ac43f3a0ac189d07a6b9a83c3dec48420" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_set_on_voice_server_update</definition>
        <argsstring>(struct discord *client, voice_server_update_cb *callback)</argsstring>
        <name>discord_set_on_voice_server_update</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1aee86b0424b3c03c48b60fa99a0814d2f" kindref="member">voice_server_update_cb</ref> *</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Set a callback that triggers when a voice server is updated. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>the client created with <ref refid="discord_8h_1a445cca7dc5a28113760c7e55759845c7" kindref="member">discord_init()</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>the callback that will be executed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>this function will automatically set intent(s) to make the callback triggerable </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="635" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="635" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a3d7c81f03f681c7e5671489b8160aec7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_set_voice_cbs</definition>
        <argsstring>(struct discord *client, struct discord_voice_cbs *callbacks)</argsstring>
        <name>discord_set_voice_cbs</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct <ref refid="structdiscord__voice__cbs" kindref="compound">discord_voice_cbs</ref> *</type>
          <declname>callbacks</declname>
        </param>
        <briefdescription>
<para>Helper to quickly set voice callbacks. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>the client created with <ref refid="discord_8h_1a445cca7dc5a28113760c7e55759845c7" kindref="member">discord_init()</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callbacks</parametername>
</parameternamelist>
<parameterdescription>
<para>the voice callbacks that will be executed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="642" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="642" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a787bd2ecc48f00ec9a36a748feac5956" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_set_blocking_event_handler</definition>
        <argsstring>(struct discord *client, enum discord_event_handling_mode(*f)(void *cxt))</argsstring>
        <name>discord_set_blocking_event_handler</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>enum <ref refid="discord_8h_1a1b11a8fb0bb025f18e2b7b207979b314" kindref="member">discord_event_handling_mode</ref>(*)(void *cxt)</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="650" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="650" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1ae0e3bf4cdf86e1737d53e16b802fc186" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_run</definition>
        <argsstring>(struct discord *client)</argsstring>
        <name>discord_run</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
<para>Start a connection to the Discord Gateway. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>the client created with <ref refid="discord_8h_1a445cca7dc5a28113760c7e55759845c7" kindref="member">discord_init()</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="657" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="657" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a2fe34375b2ce557d8ac84a0794063b78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* discord_set_data</definition>
        <argsstring>(struct discord *client, void *data)</argsstring>
        <name>discord_set_data</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Keep some user arbitrary data, by associating it to the client. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>the client created with <ref refid="discord_8h_1a445cca7dc5a28113760c7e55759845c7" kindref="member">discord_init()</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>user arbitrary data to be accessed via <ref refid="discord_8h_1af7534e0384766754eeb77f573dac1a84" kindref="member">discord_get_data()</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the arbitrary user data address @warn the user should provide his own locking mechanism to protect his data from race conditions </para>
</simplesect>
<simplesect kind="see"><para><ref refid="discord_8h_1af7534e0384766754eeb77f573dac1a84" kindref="member">discord_get_data()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="669" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="669" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1af7534e0384766754eeb77f573dac1a84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* discord_get_data</definition>
        <argsstring>(struct discord *client)</argsstring>
        <name>discord_get_data</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
<para>Received user arbitrary data associated to the client. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>the client created with <ref refid="discord_8h_1a445cca7dc5a28113760c7e55759845c7" kindref="member">discord_init()</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the arbitrary user data address @warn the user should provide his own locking mechanism to protect his data from race conditions </para>
</simplesect>
<simplesect kind="see"><para><ref refid="discord_8h_1a2fe34375b2ce557d8ac84a0794063b78" kindref="member">discord_set_data()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="680" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="680" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1ac29f8303759532bce1df09376a80e6ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_replace_presence</definition>
        <argsstring>(struct discord *client, struct discord_gateway_status_update *presence)</argsstring>
        <name>discord_replace_presence</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct discord_gateway_status_update *</type>
          <declname>presence</declname>
        </param>
        <briefdescription>
<para>Replace the Client presence with a struct discord_gateway_status_update. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>the client created with <ref refid="discord_8h_1a445cca7dc5a28113760c7e55759845c7" kindref="member">discord_init()</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>presence</parametername>
</parameternamelist>
<parameterdescription>
<para>the presence to replace the client&apos;s </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para><ref refid="discord_8h_1a09fa023f7aab5b9a053250115f1af903" kindref="member">discord_set_presence()</ref> is a more comprehensible alternative </para>
</simplesect>
<simplesect kind="see"><para><ref refid="discord_8h_1a09fa023f7aab5b9a053250115f1af903" kindref="member">discord_set_presence()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="690" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="690" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a09fa023f7aab5b9a053250115f1af903" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_set_presence</definition>
        <argsstring>(struct discord *client, struct discord_gateway_activity *activity, char status[], bool afk)</argsstring>
        <name>discord_set_presence</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct discord_gateway_activity *</type>
          <declname>activity</declname>
        </param>
        <param>
          <type>char</type>
          <declname>status</declname>
          <array>[]</array>
        </param>
        <param>
          <type>bool</type>
          <declname>afk</declname>
        </param>
        <briefdescription>
<para>Modify the Client presence state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>the client created with <ref refid="discord_8h_1a445cca7dc5a28113760c7e55759845c7" kindref="member">discord_init()</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>activity</parametername>
</parameternamelist>
<parameterdescription>
<para>the user current activities </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>either &quot;idle&quot;,&quot;dnd&quot;,&quot;online&quot;, or &quot;offline&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>afk</parametername>
</parameternamelist>
<parameterdescription>
<para>#true or #false </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="700" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="700" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a81d7889c378d15e3cbe5a8fffe1489a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_get_guild_audit_log</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t guild_id, struct discord_get_guild_audit_log_params *params, struct discord_audit_log *p_audit_log)</argsstring>
        <name>discord_get_guild_audit_log</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>guild_id</declname>
        </param>
        <param>
          <type>struct discord_get_guild_audit_log_params *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>struct discord_audit_log *</type>
          <declname>p_audit_log</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="707" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="707" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a4c61fd80befb32ef0d13f3b0226139d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_get_channel</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t channel_id, struct discord_channel *p_channel)</argsstring>
        <name>discord_get_channel</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <param>
          <type>struct discord_channel *</type>
          <declname>p_channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="710" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="710" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a2feeb362e4787f63910fcabdfaf85111" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_modify_channel</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t channel_id, struct discord_modify_channel_params *params, struct discord_channel *p_channel)</argsstring>
        <name>discord_modify_channel</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <param>
          <type>struct discord_modify_channel_params *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>struct discord_channel *</type>
          <declname>p_channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="711" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="711" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a797a880bdb31d6649a4fcc2f93493699" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_delete_channel</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t channel_id, struct discord_channel *p_channel)</argsstring>
        <name>discord_delete_channel</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <param>
          <type>struct discord_channel *</type>
          <declname>p_channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="712" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="712" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1af90f7c5d85a1cc39a89369dc5b386f7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_get_channel_messages</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t channel_id, struct discord_get_channel_messages_params *params, NTL_T(struct discord_message) *p_messages)</argsstring>
        <name>discord_get_channel_messages</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <param>
          <type>struct <ref refid="structdiscord__get__channel__messages__params" kindref="compound">discord_get_channel_messages_params</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>NTL_T(struct discord_message) *</type>
          <declname>p_messages</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="713" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="713" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a8a4fd93a2bfbcd72fa782dc2240c8534" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_get_channel_message</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t channel_id, const u64_snowflake_t message_id, struct discord_message *p_message)</argsstring>
        <name>discord_get_channel_message</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>message_id</declname>
        </param>
        <param>
          <type>struct discord_message *</type>
          <declname>p_message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="714" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="714" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1aa3b677f10f01789f3a49f9b03bb33123" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_create_message</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t channel_id, struct discord_create_message_params *params, struct discord_message *p_message)</argsstring>
        <name>discord_create_message</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <param>
          <type>struct <ref refid="structdiscord__create__message__params" kindref="compound">discord_create_message_params</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>struct discord_message *</type>
          <declname>p_message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="715" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="715" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1af484b1df781540059ad41caa842f231e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_crosspost_message</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t channel_id, const u64_snowflake_t message_id, struct discord_message *p_message)</argsstring>
        <name>discord_crosspost_message</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>message_id</declname>
        </param>
        <param>
          <type>struct discord_message *</type>
          <declname>p_message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="716" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="716" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1af49cc2529120bceb09fc060fee2b0256" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_create_reaction</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t channel_id, const u64_snowflake_t message_id, const u64_snowflake_t emoji_id, const char emoji_name[])</argsstring>
        <name>discord_create_reaction</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>message_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>emoji_id</declname>
        </param>
        <param>
          <type>const char</type>
          <declname>emoji_name</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="717" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="717" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a857928d288ba52cf0c85ed0a6ecfe019" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_delete_own_reaction</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t channel_id, const u64_snowflake_t message_id, const u64_snowflake_t emoji_id, const char emoji_name[])</argsstring>
        <name>discord_delete_own_reaction</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>message_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>emoji_id</declname>
        </param>
        <param>
          <type>const char</type>
          <declname>emoji_name</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="718" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="718" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1adf871c1c3ed4a90b802413821414151b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_delete_user_reaction</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t channel_id, const u64_snowflake_t message_id, const u64_snowflake_t user_id, const u64_snowflake_t emoji_id, const char emoji_name[])</argsstring>
        <name>discord_delete_user_reaction</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>message_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>user_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>emoji_id</declname>
        </param>
        <param>
          <type>const char</type>
          <declname>emoji_name</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="719" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="719" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a7d788ff362200e68008145c290186f17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_get_reactions</definition>
        <argsstring>(struct discord *client, u64_snowflake_t channel_id, u64_snowflake_t message_id, const u64_snowflake_t emoji_id, const char emoji_name[], struct discord_get_reactions_params *params, NTL_T(struct discord_user) *p_users)</argsstring>
        <name>discord_get_reactions</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>message_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>emoji_id</declname>
        </param>
        <param>
          <type>const char</type>
          <declname>emoji_name</declname>
          <array>[]</array>
        </param>
        <param>
          <type>struct discord_get_reactions_params *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>NTL_T(struct discord_user) *</type>
          <declname>p_users</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="720" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="720" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a6ce2ea48ea01a30e082eb69feea5a6de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_delete_all_reactions</definition>
        <argsstring>(struct discord *client, u64_snowflake_t channel_id, u64_snowflake_t message_id)</argsstring>
        <name>discord_delete_all_reactions</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>message_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="721" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="721" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1ad31c0271bc31a09741f904d340b3a173" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_delete_all_reactions_for_emoji</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t channel_id, const u64_snowflake_t message_id, const u64_snowflake_t emoji_id, const char emoji_name[])</argsstring>
        <name>discord_delete_all_reactions_for_emoji</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>message_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>emoji_id</declname>
        </param>
        <param>
          <type>const char</type>
          <declname>emoji_name</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="722" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="722" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a7d3e65f8daf9f708817edcb61777081b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_edit_message</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t channel_id, const u64_snowflake_t message_id, struct discord_edit_message_params *params, struct discord_message *p_message)</argsstring>
        <name>discord_edit_message</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>message_id</declname>
        </param>
        <param>
          <type>struct <ref refid="structdiscord__edit__message__params" kindref="compound">discord_edit_message_params</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>struct discord_message *</type>
          <declname>p_message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="723" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="723" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a51a56e2c2cea60b15f4e00d7c2a0d32c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_delete_message</definition>
        <argsstring>(struct discord *client, u64_snowflake_t channel_id, u64_snowflake_t message_id)</argsstring>
        <name>discord_delete_message</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>message_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="724" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="724" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1aacda48df5d68ed8d5cf6983f245f3224" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_bulk_delete_messages</definition>
        <argsstring>(struct discord *client, u64_snowflake_t channel_id, NTL_T(u64_snowflake_t) messages)</argsstring>
        <name>discord_bulk_delete_messages</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <param>
          <type>NTL_T(<ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref>)</type>
          <declname>messages</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="725" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="725" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1aa9d5af25d40b777f55f309e09c7f04f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_edit_channel_permissions</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t channel_id, const u64_snowflake_t overwrite_id, struct discord_edit_channel_permissions_params *params)</argsstring>
        <name>discord_edit_channel_permissions</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>overwrite_id</declname>
        </param>
        <param>
          <type>struct discord_edit_channel_permissions_params *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="726" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="726" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a8bee5d8b9cb72071e2b0fa967ee343ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_get_channel_invites</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t channel_id, NTL_T(struct discord_invite) *p_invites)</argsstring>
        <name>discord_get_channel_invites</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <param>
          <type>NTL_T(struct discord_invite) *</type>
          <declname>p_invites</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="727" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="727" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a136b83a1ba0801388b3f8f959cf0cba8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_create_channel_invite</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t channel_id, struct discord_create_channel_invite_params *params, struct discord_invite *p_invite)</argsstring>
        <name>discord_create_channel_invite</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <param>
          <type>struct discord_create_channel_invite_params *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>struct discord_invite *</type>
          <declname>p_invite</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="728" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="728" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1affecffdb89121bc1169c6c35e44b8002" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_delete_channel_permission</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t channel_id, const u64_snowflake_t overwrite_id)</argsstring>
        <name>discord_delete_channel_permission</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>overwrite_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="729" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="729" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1af71f7d651c475d86c938a1e48c857ad4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_trigger_typing_indicator</definition>
        <argsstring>(struct discord *client, u64_snowflake_t channel_id)</argsstring>
        <name>discord_trigger_typing_indicator</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="730" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="730" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1adcec0982f42c7a20b595f50732f77b50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_follow_news_channel</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t channel_id, struct discord_follow_news_channel_params *params, struct discord_channel *p_followed_channel)</argsstring>
        <name>discord_follow_news_channel</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <param>
          <type>struct discord_follow_news_channel_params *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>struct discord_channel *</type>
          <declname>p_followed_channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="731" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="731" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a8a5afc6872af7a66aee556541b79b3bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_get_pinned_messages</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t channel_id, NTL_T(struct discord_message) *p_messages)</argsstring>
        <name>discord_get_pinned_messages</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <param>
          <type>NTL_T(struct discord_message) *</type>
          <declname>p_messages</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="732" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="732" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a970be89edad8c0e7ff33114fcbe1ec99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_pin_message</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t channel_id, const u64_snowflake_t message_id)</argsstring>
        <name>discord_pin_message</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>message_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="733" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="733" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a3eaa78acf878cadf7a133ce35b75f8bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_unpin_message</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t channel_id, const u64_snowflake_t message_id)</argsstring>
        <name>discord_unpin_message</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>message_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="734" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="734" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1aead04c36e4b1579e97665e7ce760de9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_group_dm_add_recipient</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t channel_id, const u64_snowflake_t user_id, struct discord_group_dm_add_recipient_params *params)</argsstring>
        <name>discord_group_dm_add_recipient</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>user_id</declname>
        </param>
        <param>
          <type>struct discord_group_dm_add_recipient_params *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="735" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="735" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a94bf9c82a49c8ccb2565daafa775a3f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_group_dm_remove_recipient</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t channel_id, const u64_snowflake_t user_id)</argsstring>
        <name>discord_group_dm_remove_recipient</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>user_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="736" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="736" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1afd7ab361ee00797bd5d03fc87b71912b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_start_thread_with_message</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t channel_id, const u64_snowflake_t message_id, struct discord_start_thread_with_message_params *params, struct discord_channel *p_channel)</argsstring>
        <name>discord_start_thread_with_message</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>message_id</declname>
        </param>
        <param>
          <type>struct discord_start_thread_with_message_params *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>struct discord_channel *</type>
          <declname>p_channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="737" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="737" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a8dfdb19140983a835050fc051471e8e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_start_thread_without_message</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t channel_id, struct discord_start_thread_without_message_params *params, struct discord_channel *p_channel)</argsstring>
        <name>discord_start_thread_without_message</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <param>
          <type>struct discord_start_thread_without_message_params *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>struct discord_channel *</type>
          <declname>p_channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="738" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="738" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a65e786353ce28ff0ea7c3d23b3bfb767" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_join_thread</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t channel_id)</argsstring>
        <name>discord_join_thread</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="739" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="739" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a5a0a992e189d04f137fccdc1a7820b1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_add_thread_member</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t channel_id, const u64_snowflake_t user_id)</argsstring>
        <name>discord_add_thread_member</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>user_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="740" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="740" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a4c27c09c1e9bb6ace468eea814b24c7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_leave_thread</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t channel_id)</argsstring>
        <name>discord_leave_thread</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="741" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="741" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a65aac5c74ee75974a0ecec19797a30ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_remove_thread_member</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t channel_id, const u64_snowflake_t user_id)</argsstring>
        <name>discord_remove_thread_member</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>user_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="742" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="742" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a24ebee6d22865c846631d11a4864d1ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_list_thread_members</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t channel_id, NTL_T(struct discord_thread_member) *p_thread_members)</argsstring>
        <name>discord_list_thread_members</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <param>
          <type>NTL_T(struct discord_thread_member) *</type>
          <declname>p_thread_members</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="743" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="743" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a7ed819233455333ae5161fb25723d1c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_list_active_threads</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t channel_id, struct discord_thread_response_body *body)</argsstring>
        <name>discord_list_active_threads</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <param>
          <type>struct discord_thread_response_body *</type>
          <declname>body</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="744" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="744" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a57de1006b9809236287b99c8e8305619" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_list_public_archived_threads</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t channel_id, const u64_unix_ms_t before, const int limit, struct discord_thread_response_body *body)</argsstring>
        <name>discord_list_public_archived_threads</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a8c10c2449cb2148f47b8a032af96dd60" kindref="member">u64_unix_ms_t</ref></type>
          <declname>before</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>limit</declname>
        </param>
        <param>
          <type>struct discord_thread_response_body *</type>
          <declname>body</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="745" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="745" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a779eae001e367bae8b907b9a573dcd4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_list_private_archived_threads</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t channel_id, const u64_unix_ms_t before, const int limit, struct discord_thread_response_body *body)</argsstring>
        <name>discord_list_private_archived_threads</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a8c10c2449cb2148f47b8a032af96dd60" kindref="member">u64_unix_ms_t</ref></type>
          <declname>before</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>limit</declname>
        </param>
        <param>
          <type>struct discord_thread_response_body *</type>
          <declname>body</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="746" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="746" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a201913be25fc9e390e3aded1ad4afe4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_list_joined_private_archived_threads</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t channel_id, const u64_unix_ms_t before, const int limit, struct discord_thread_response_body *body)</argsstring>
        <name>discord_list_joined_private_archived_threads</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a8c10c2449cb2148f47b8a032af96dd60" kindref="member">u64_unix_ms_t</ref></type>
          <declname>before</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>limit</declname>
        </param>
        <param>
          <type>struct discord_thread_response_body *</type>
          <declname>body</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="747" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="747" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a31be70e0c762d4ffa5eb821085111287" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_list_guild_emojis</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t guild_id, NTL_T(struct discord_emoji) *p_emojis)</argsstring>
        <name>discord_list_guild_emojis</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>guild_id</declname>
        </param>
        <param>
          <type>NTL_T(struct discord_emoji) *</type>
          <declname>p_emojis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="750" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="750" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a03184800fc1b135d1e6ade3d2da2be64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_get_guild_emoji</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t guild_id, const u64_snowflake_t emoji_id, struct discord_emoji *p_emoji)</argsstring>
        <name>discord_get_guild_emoji</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>guild_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>emoji_id</declname>
        </param>
        <param>
          <type>struct discord_emoji *</type>
          <declname>p_emoji</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="751" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="751" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a562c3035ce2eedbbb63ca934e1de1c69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_create_guild_emoji</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t guild_id, struct discord_create_guild_emoji_params *params, struct discord_emoji *p_emoji)</argsstring>
        <name>discord_create_guild_emoji</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>guild_id</declname>
        </param>
        <param>
          <type>struct discord_create_guild_emoji_params *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>struct discord_emoji *</type>
          <declname>p_emoji</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="752" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="752" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1aea1e92fb201505151b37ee1c8f1b855f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_modify_guild_emoji</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t guild_id, const u64_snowflake_t emoji_id, struct discord_modify_guild_emoji_params *params, struct discord_emoji *p_emoji)</argsstring>
        <name>discord_modify_guild_emoji</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>guild_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>emoji_id</declname>
        </param>
        <param>
          <type>struct discord_modify_guild_emoji_params *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>struct discord_emoji *</type>
          <declname>p_emoji</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="753" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="753" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a14c2c659a70516e60d9abcff82d701dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_delete_guild_emoji</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t guild_id, const u64_snowflake_t emoji_id)</argsstring>
        <name>discord_delete_guild_emoji</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>guild_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>emoji_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="754" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="754" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a75b25aef5d985983e6cc6f13f82606ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_create_guild</definition>
        <argsstring>(struct discord *client, struct discord_create_guild_params *params, struct discord_guild *p_guild)</argsstring>
        <name>discord_create_guild</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct discord_create_guild_params *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>struct discord_guild *</type>
          <declname>p_guild</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="757" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="757" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a8545a8492c38b03a8ddf9fb1c8627ce1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_get_guild</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t guild_id, struct discord_guild *p_guild)</argsstring>
        <name>discord_get_guild</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>guild_id</declname>
        </param>
        <param>
          <type>struct discord_guild *</type>
          <declname>p_guild</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="758" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="758" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a0b8f6f9d6b2bf9aadf3350c397a23e2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_get_guild_preview</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t guild_id, struct discord_guild_preview *p_guild_preview)</argsstring>
        <name>discord_get_guild_preview</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>guild_id</declname>
        </param>
        <param>
          <type>struct discord_guild_preview *</type>
          <declname>p_guild_preview</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="759" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="759" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a5e43a85d9a19cb7d48ccb4486581f3d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_modify_guild</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t guild_id, struct discord_modify_guild_params *params, struct discord_guild *p_guild)</argsstring>
        <name>discord_modify_guild</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>guild_id</declname>
        </param>
        <param>
          <type>struct discord_modify_guild_params *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>struct discord_guild *</type>
          <declname>p_guild</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="760" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="760" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1ab38de653971be92d42b8667fbc77c3f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_delete_guild</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t guild_id)</argsstring>
        <name>discord_delete_guild</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>guild_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="761" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="761" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a5d250b5119970ccbac9b4e6993efc05c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_get_guild_channels</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t guild_id, NTL_T(struct discord_channel) *p_channels)</argsstring>
        <name>discord_get_guild_channels</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>guild_id</declname>
        </param>
        <param>
          <type>NTL_T(struct discord_channel) *</type>
          <declname>p_channels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="762" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="762" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1acc4363c5911fc175c99e4f89a52cc759" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_create_guild_channel</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t guild_id, struct discord_create_guild_channel_params *params, struct discord_channel *p_channel)</argsstring>
        <name>discord_create_guild_channel</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>guild_id</declname>
        </param>
        <param>
          <type>struct discord_create_guild_channel_params *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>struct discord_channel *</type>
          <declname>p_channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="763" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="763" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a4b6b8d3d3bccc94791ff59e7577574cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_modify_guild_channel_positions</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t guild_id, NTL_T(struct discord_modify_guild_channel_positions_params) params)</argsstring>
        <name>discord_modify_guild_channel_positions</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>guild_id</declname>
        </param>
        <param>
          <type>NTL_T(struct discord_modify_guild_channel_positions_params)</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="764" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="764" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a6858aeedb249dcc4df1e64c5fd10f51e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_get_guild_member</definition>
        <argsstring>(struct discord *client, u64_snowflake_t guild_id, u64_snowflake_t user_id, struct discord_guild_member *p_member)</argsstring>
        <name>discord_get_guild_member</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>guild_id</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>user_id</declname>
        </param>
        <param>
          <type>struct discord_guild_member *</type>
          <declname>p_member</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="765" column="11" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="765" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a475eb63d7a38b9c905db4b2d04dba978" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_list_guild_members</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t guild_id, struct discord_list_guild_members_params *params, NTL_T(struct discord_guild_member) *p_members)</argsstring>
        <name>discord_list_guild_members</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>guild_id</declname>
        </param>
        <param>
          <type>struct <ref refid="structdiscord__list__guild__members__params" kindref="compound">discord_list_guild_members_params</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>NTL_T(struct discord_guild_member) *</type>
          <declname>p_members</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="766" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="766" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a88fbcf3e1ffed70ac10f6fe6764e65e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_search_guild_members</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t guild_id, struct discord_search_guild_members_params *params, NTL_T(struct discord_guild_member) *p_members)</argsstring>
        <name>discord_search_guild_members</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>guild_id</declname>
        </param>
        <param>
          <type>struct discord_search_guild_members_params *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>NTL_T(struct discord_guild_member) *</type>
          <declname>p_members</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="767" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="767" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a59a1ed3f73a1903f8937f9cee084737f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_modify_guild_member</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t guild_id, const u64_snowflake_t user_id, struct discord_modify_guild_member_params *params, struct discord_guild_member *p_member)</argsstring>
        <name>discord_modify_guild_member</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>guild_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>user_id</declname>
        </param>
        <param>
          <type>struct discord_modify_guild_member_params *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>struct discord_guild_member *</type>
          <declname>p_member</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="768" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="768" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a6b262457fd48cbe122d96db54059ff89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_add_guild_member</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t guild_id, const u64_snowflake_t user_id, struct discord_add_guild_member_params *params, struct discord_guild_member *p_member)</argsstring>
        <name>discord_add_guild_member</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>guild_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>user_id</declname>
        </param>
        <param>
          <type>struct discord_add_guild_member_params *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>struct discord_guild_member *</type>
          <declname>p_member</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="769" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="769" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1aea2ec42f5084eb572db75d2ffaad1745" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_modify_current_user_nick</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t guild_id, const char nick[])</argsstring>
        <name>discord_modify_current_user_nick</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>guild_id</declname>
        </param>
        <param>
          <type>const char</type>
          <declname>nick</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="770" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="770" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a67014912978ba78ed9b62aa2def15165" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_add_guild_member_role</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t guild_id, const u64_snowflake_t user_id, const u64_snowflake_t role_id)</argsstring>
        <name>discord_add_guild_member_role</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>guild_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>user_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>role_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="771" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="771" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a3080df51104116e97d5f146a5504ae1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_remove_guild_member_role</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t guild_id, const u64_snowflake_t user_id, const u64_snowflake_t role_id)</argsstring>
        <name>discord_remove_guild_member_role</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>guild_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>user_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>role_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="772" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="772" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a19158a3fd219d8bd35429dfd33a76957" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_remove_guild_member</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t guild_id, const u64_snowflake_t user_id)</argsstring>
        <name>discord_remove_guild_member</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>guild_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>user_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="773" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="773" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a7c46ce0b465393d2c63f1fd03623d863" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_get_guild_bans</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t guild_id, NTL_T(struct discord_guild_ban) *p_bans)</argsstring>
        <name>discord_get_guild_bans</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>guild_id</declname>
        </param>
        <param>
          <type>NTL_T(struct discord_guild_ban) *</type>
          <declname>p_bans</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="774" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="774" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a3e569365b707b4261c81d5af34b4a7d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_get_guild_ban</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t guild_id, const u64_snowflake_t user_id, struct discord_guild_ban *p_ban)</argsstring>
        <name>discord_get_guild_ban</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>guild_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>user_id</declname>
        </param>
        <param>
          <type>struct discord_guild_ban *</type>
          <declname>p_ban</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="775" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="775" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a499cb0fe0d9e3a3eaebc7054fb181a77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_create_guild_ban</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t guild_id, const u64_snowflake_t user_id, int delete_message_days, const char reason[])</argsstring>
        <name>discord_create_guild_ban</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>guild_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>user_id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>delete_message_days</declname>
        </param>
        <param>
          <type>const char</type>
          <declname>reason</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="776" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="776" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a2cccfdb1085e35622fec63485d722345" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_remove_guild_ban</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t guild_id, const u64_snowflake_t user_id, const char reason[])</argsstring>
        <name>discord_remove_guild_ban</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>guild_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>user_id</declname>
        </param>
        <param>
          <type>const char</type>
          <declname>reason</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="777" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="777" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a7e7ddb378b29262f1538fbb68eab9d4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_get_guild_roles</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t guild_id, NTL_T(struct discord_permissions_role) *p_roles)</argsstring>
        <name>discord_get_guild_roles</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>guild_id</declname>
        </param>
        <param>
          <type>NTL_T(struct discord_permissions_role) *</type>
          <declname>p_roles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="778" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="778" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1ac4042feee4d8e2b323c2669d1f85af71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_create_guild_role</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t guild_id, struct discord_create_guild_role_params *params, struct discord_permissions_role *p_role)</argsstring>
        <name>discord_create_guild_role</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>guild_id</declname>
        </param>
        <param>
          <type>struct discord_create_guild_role_params *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>struct discord_permissions_role *</type>
          <declname>p_role</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="779" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="779" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a05fea06d3662efcabfb1d86302e8c7b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_modify_guild_role_positions</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t guild_id, NTL_T(struct discord_modify_guild_role_positions_params) params, NTL_T(struct discord_permissions_role) *p_roles)</argsstring>
        <name>discord_modify_guild_role_positions</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>guild_id</declname>
        </param>
        <param>
          <type>NTL_T(struct discord_modify_guild_role_positions_params)</type>
          <declname>params</declname>
        </param>
        <param>
          <type>NTL_T(struct discord_permissions_role) *</type>
          <declname>p_roles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="780" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="780" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1afa5cc20214e30d1ac4c4aace95c66775" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_modify_guild_role</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t guild_id, const u64_snowflake_t role_id, struct discord_modify_guild_role_params *params, struct discord_permissions_role *p_role)</argsstring>
        <name>discord_modify_guild_role</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>guild_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>role_id</declname>
        </param>
        <param>
          <type>struct discord_modify_guild_role_params *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>struct discord_permissions_role *</type>
          <declname>p_role</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="781" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="781" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1aa7f8d051db93343d52f7306a4778722c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_delete_guild_role</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t guild_id, const u64_snowflake_t role_id)</argsstring>
        <name>discord_delete_guild_role</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>guild_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>role_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="782" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="782" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a9766dd277b518aeb212abb182bad60e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_get_invite</definition>
        <argsstring>(struct discord *client, char *invite_code, struct discord_get_invite_params *params, struct discord_invite *p_invite)</argsstring>
        <name>discord_get_invite</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>invite_code</declname>
        </param>
        <param>
          <type>struct discord_get_invite_params *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>struct discord_invite *</type>
          <declname>p_invite</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="785" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="785" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a2bec8afddd6cd54d13920d4dcd609042" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_delete_invite</definition>
        <argsstring>(struct discord *client, char *invite_code, struct discord_invite *p_invite)</argsstring>
        <name>discord_delete_invite</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>invite_code</declname>
        </param>
        <param>
          <type>struct discord_invite *</type>
          <declname>p_invite</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="786" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="786" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a99482b768d36c5d452f4900b80f7c942" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_get_user</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t user_id, struct discord_user *p_user)</argsstring>
        <name>discord_get_user</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>user_id</declname>
        </param>
        <param>
          <type>struct discord_user *</type>
          <declname>p_user</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="789" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="789" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a29ae0a3b8edace612d4a1f5383157069" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_modify_current_user</definition>
        <argsstring>(struct discord *client, struct discord_modify_current_user_params *params, struct discord_user *p_user)</argsstring>
        <name>discord_modify_current_user</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct discord_modify_current_user_params *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>struct discord_user *</type>
          <declname>p_user</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="790" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="790" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a615ebbb1f300c0e85dae48b59f5695f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_get_current_user</definition>
        <argsstring>(struct discord *client, struct discord_user *p_user)</argsstring>
        <name>discord_get_current_user</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct discord_user *</type>
          <declname>p_user</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="791" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="791" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a9bc0af2b5ca034d56c8b4dea20458a7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode sb_discord_get_current_user</definition>
        <argsstring>(struct discord *client, struct sized_buffer *p_sb_user)</argsstring>
        <name>sb_discord_get_current_user</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct sized_buffer *</type>
          <declname>p_sb_user</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="792" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="792" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a340bca2411f418416374ae1a75e20490" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_get_current_user_guilds</definition>
        <argsstring>(struct discord *client, NTL_T(struct discord_guild) *p_guilds)</argsstring>
        <name>discord_get_current_user_guilds</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>NTL_T(struct discord_guild) *</type>
          <declname>p_guilds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="793" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="793" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a26b38c03b0115967f3774982d0ae6b1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_leave_guild</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t guild_id)</argsstring>
        <name>discord_leave_guild</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>guild_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="794" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="794" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a2ef599cbac7a8b223ce7ffa858ff9091" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_create_dm</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t recipient_id, struct discord_channel *p_dm_channel)</argsstring>
        <name>discord_create_dm</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>recipient_id</declname>
        </param>
        <param>
          <type>struct discord_channel *</type>
          <declname>p_dm_channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="795" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="795" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1ac416f5deadafcf143cc8a2c01b727d1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_create_group_dm</definition>
        <argsstring>(struct discord *client, struct discord_create_group_dm_params *params, struct discord_channel *p_dm_channel)</argsstring>
        <name>discord_create_group_dm</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct discord_create_group_dm_params *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>struct discord_channel *</type>
          <declname>p_dm_channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="796" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="796" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1ad3723bff27b5f87f54332415225e0d18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_get_user_connections</definition>
        <argsstring>(struct discord *client, NTL_T(struct discord_connection) *p_connections)</argsstring>
        <name>discord_get_user_connections</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>NTL_T(struct discord_connection) *</type>
          <declname>p_connections</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="797" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="797" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a3035f1af2dfc1ebb7512f44253ee6168" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_list_voice_regions</definition>
        <argsstring>(struct discord *client, NTL_T(struct discord_voice_region) *p_voice_regions)</argsstring>
        <name>discord_list_voice_regions</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>NTL_T(struct discord_voice_region) *</type>
          <declname>p_voice_regions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="800" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="800" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1aceb2e973229ca1d060ca331d33997a74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_get_gateway</definition>
        <argsstring>(struct discord *client, struct discord_session *p_session)</argsstring>
        <name>discord_get_gateway</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct <ref refid="structdiscord__session" kindref="compound">discord_session</ref> *</type>
          <declname>p_session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="803" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="803" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1ab3c344ef40f1ff11a2f84688eb7f89a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_get_gateway_bot</definition>
        <argsstring>(struct discord *client, struct discord_session *p_session)</argsstring>
        <name>discord_get_gateway_bot</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>struct <ref refid="structdiscord__session" kindref="compound">discord_session</ref> *</type>
          <declname>p_session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="804" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="804" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1adfd0289ffc7f0fd0789d196c37691047" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_embed_set_thumbnail</definition>
        <argsstring>(struct discord_embed *embed, char url[], char proxy_url[], int height, int width)</argsstring>
        <name>discord_embed_set_thumbnail</name>
        <param>
          <type>struct discord_embed *</type>
          <declname>embed</declname>
        </param>
        <param>
          <type>char</type>
          <declname>url</declname>
          <array>[]</array>
        </param>
        <param>
          <type>char</type>
          <declname>proxy_url</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="811" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="811" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1abf8b562a89f81232fed3d0edcc81e994" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_embed_set_image</definition>
        <argsstring>(struct discord_embed *embed, char url[], char proxy_url[], int height, int width)</argsstring>
        <name>discord_embed_set_image</name>
        <param>
          <type>struct discord_embed *</type>
          <declname>embed</declname>
        </param>
        <param>
          <type>char</type>
          <declname>url</declname>
          <array>[]</array>
        </param>
        <param>
          <type>char</type>
          <declname>proxy_url</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="812" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="812" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a2fc46ffee7990f81397c5d20a546cbae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_embed_set_video</definition>
        <argsstring>(struct discord_embed *embed, char url[], char proxy_url[], int height, int width)</argsstring>
        <name>discord_embed_set_video</name>
        <param>
          <type>struct discord_embed *</type>
          <declname>embed</declname>
        </param>
        <param>
          <type>char</type>
          <declname>url</declname>
          <array>[]</array>
        </param>
        <param>
          <type>char</type>
          <declname>proxy_url</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="813" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="813" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a52f5dd61b9b425ff86c369e31517abfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_embed_set_footer</definition>
        <argsstring>(struct discord_embed *embed, char text[], char icon_url[], char proxy_icon_url[])</argsstring>
        <name>discord_embed_set_footer</name>
        <param>
          <type>struct discord_embed *</type>
          <declname>embed</declname>
        </param>
        <param>
          <type>char</type>
          <declname>text</declname>
          <array>[]</array>
        </param>
        <param>
          <type>char</type>
          <declname>icon_url</declname>
          <array>[]</array>
        </param>
        <param>
          <type>char</type>
          <declname>proxy_icon_url</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="814" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="814" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1affe4d5962731cfa56650237c18eebb03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_embed_set_provider</definition>
        <argsstring>(struct discord_embed *embed, char name[], char url[])</argsstring>
        <name>discord_embed_set_provider</name>
        <param>
          <type>struct discord_embed *</type>
          <declname>embed</declname>
        </param>
        <param>
          <type>char</type>
          <declname>name</declname>
          <array>[]</array>
        </param>
        <param>
          <type>char</type>
          <declname>url</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="815" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="815" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1aa2b36b3810b48f4d225d4277bb144670" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_embed_set_author</definition>
        <argsstring>(struct discord_embed *embed, char name[], char url[], char icon_url[], char proxy_icon_url[])</argsstring>
        <name>discord_embed_set_author</name>
        <param>
          <type>struct discord_embed *</type>
          <declname>embed</declname>
        </param>
        <param>
          <type>char</type>
          <declname>name</declname>
          <array>[]</array>
        </param>
        <param>
          <type>char</type>
          <declname>url</declname>
          <array>[]</array>
        </param>
        <param>
          <type>char</type>
          <declname>icon_url</declname>
          <array>[]</array>
        </param>
        <param>
          <type>char</type>
          <declname>proxy_icon_url</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="816" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="816" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1ab038095175d60499df67139b6e7f8852" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_embed_add_field</definition>
        <argsstring>(struct discord_embed *embed, char name[], char value[], bool Inline)</argsstring>
        <name>discord_embed_add_field</name>
        <param>
          <type>struct discord_embed *</type>
          <declname>embed</declname>
        </param>
        <param>
          <type>char</type>
          <declname>name</declname>
          <array>[]</array>
        </param>
        <param>
          <type>char</type>
          <declname>value</declname>
          <array>[]</array>
        </param>
        <param>
          <type>bool</type>
          <declname>Inline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="817" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="817" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a4160937d1ba6443480690bb911acf584" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void discord_overwrite_append</definition>
        <argsstring>(NTL_T(struct discord_channel_overwrite) *permission_overwrites, u64_snowflake_t id, int type, enum discord_permissions_bitwise_flags allow, enum discord_permissions_bitwise_flags deny)</argsstring>
        <name>discord_overwrite_append</name>
        <param>
          <type>NTL_T(struct discord_channel_overwrite) *</type>
          <declname>permission_overwrites</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>enum discord_permissions_bitwise_flags</type>
          <declname>allow</declname>
        </param>
        <param>
          <type>enum discord_permissions_bitwise_flags</type>
          <declname>deny</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="820" column="6" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="820" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a52c5e4639cd54ed911d6c04f3a5c8daa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_get_channel_at_pos</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t guild_id, const enum discord_channel_types type, const size_t position, struct discord_channel *p_channel)</argsstring>
        <name>discord_get_channel_at_pos</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>guild_id</declname>
        </param>
        <param>
          <type>const enum discord_channel_types</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>position</declname>
        </param>
        <param>
          <type>struct discord_channel *</type>
          <declname>p_channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="821" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="821" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1acc3e6bb474a17a2f2556caadc29c51a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_delete_messages_by_author_id</definition>
        <argsstring>(struct discord *client, u64_snowflake_t channel_id, u64_snowflake_t author_id)</argsstring>
        <name>discord_delete_messages_by_author_id</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>channel_id</declname>
        </param>
        <param>
          <type><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>author_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="822" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="822" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="discord_8h_1a7bca68b10bc07a82621a2bc20e2ac567" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ORCAcode</type>
        <definition>ORCAcode discord_disconnect_guild_member</definition>
        <argsstring>(struct discord *client, const u64_snowflake_t guild_id, const u64_snowflake_t user_id, struct discord_guild_member *p_member)</argsstring>
        <name>discord_disconnect_guild_member</name>
        <param>
          <type>struct <ref refid="structdiscord" kindref="compound">discord</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>guild_id</declname>
        </param>
        <param>
          <type>const <ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref></type>
          <declname>user_id</declname>
        </param>
        <param>
          <type>struct discord_guild_member *</type>
          <declname>p_member</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lucasmull/Trabalho/orca/discord.h" line="825" column="10" declfile="/home/lucasmull/Trabalho/orca/discord.h" declline="825" declcolumn="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>File containing public functions and datatypes. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>cee-studio </para>
</simplesect>
<simplesect kind="date"><para>18 Jun 2021 These symbols are organized in a intuitive fashion to be easily matched to the official Discord API docs. </para>
</simplesect>
<simplesect kind="see"><para><ulink url="https://discord.com/developers/docs/intro">https://discord.com/developers/docs/intro</ulink> </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#ifndef<sp/>DISCORD_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DISCORD_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;json-actor-boxed.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;logconf.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DISCORD_API_BASE_URL<sp/>&quot;https://discord.com/api/v9&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DISCORD_GATEWAY_URL_SUFFIX<sp/>&quot;?v=9&amp;encoding=json&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DISCORD_VOICE_CONNECTIONS_URL_SUFFIX<sp/>&quot;?v=4&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>FORWARD<sp/>DECLARATIONS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdiscord" kindref="compound">discord</ref>;</highlight></codeline>
<codeline lineno="26" refid="discord_8h_1a8c10c2449cb2148f47b8a032af96dd60" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdiscord__voice__cbs" kindref="compound">discord_voice_cbs</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint64_t<sp/><ref refid="discord_8h_1a8c10c2449cb2148f47b8a032af96dd60" kindref="member">u64_unix_ms_t</ref>;<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment">/*<sp/>SNOWFLAKES</highlight></codeline>
<codeline lineno="31"><highlight class="comment">https://discord.com/developers/docs/reference#snowflakes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint64_t<sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref>;<sp/></highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor">#define<sp/>SNOWFLAKE_INCREMENT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SNOWFLAKE_PROCESS_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>17</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SNOWFLAKE_INTERNAL_WORKER_ID<sp/><sp/>22</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SNOWFLAKE_TIMESTAMP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Size<sp/>limits<sp/>discovered<sp/>from<sp/>Discord<sp/>docs<sp/>and<sp/>across<sp/>the<sp/>web<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_NAME_LEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>100<sp/>+<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_TOPIC_LEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1024<sp/>+<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_DESCRIPTION_LEN<sp/><sp/><sp/>2048<sp/>+<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_USERNAME_LEN<sp/><sp/><sp/><sp/><sp/><sp/>32<sp/>+<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_DISCRIMINATOR_LEN<sp/>4<sp/>+<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_SHA256_LEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1024<sp/>+<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_LOCALE_LEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>16<sp/>+<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_EMAIL_LEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>254<sp/>+<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_REGION_LEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>16<sp/>+<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_REASON_LEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>512<sp/>+<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_MESSAGE_LEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>4000<sp/>+<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_PAYLOAD_LEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>4096<sp/>+<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>EMBED<sp/>LIMITS</highlight></codeline>
<codeline lineno="53"><highlight class="comment">https://discord.com/developers/docs/resources/channel#embed-limits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMBED_TITLE_LEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>256<sp/>+<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMBED_DESCRIPTION_LEN<sp/>2048<sp/>+<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMBED_MAX_FIELDS<sp/><sp/><sp/><sp/><sp/><sp/>25</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMBED_FIELD_NAME_LEN<sp/><sp/>256<sp/>+<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMBED_FIELD_VALUE_LEN<sp/>1024<sp/>+<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMBED_FOOTER_TEXT_LEN<sp/>2048<sp/>+<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMBED_AUTHOR_NAME_LEN<sp/>256<sp/>+<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>WEBHOOK<sp/>LIMITS</highlight></codeline>
<codeline lineno="63"><highlight class="comment">https://discord.com/developers/docs/resources/webhook#create-webhook<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WEBHOOK_NAME_LEN<sp/>80<sp/>+<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specs/discord<sp/>for<sp/>generated<sp/>code<sp/>specs<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;specs-code/discord/all_opaque_struct.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;specs-code/discord/all_enums.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;specs-code/discord/all_structs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;specs-code/discord/all_functions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="discord_8h_1afc8f66a3993c5edb45a00ef997223d52" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(<ref refid="discord_8h_1afc8f66a3993c5edb45a00ef997223d52" kindref="member">idle_cb</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">discord_user<sp/>*bot);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="discord_8h_1a9d756b50a8f1472d73e3dcc32625aa93" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(<ref refid="discord_8h_1a9d756b50a8f1472d73e3dcc32625aa93" kindref="member">event_raw_cb</ref>)(</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>discord_gateway_events<sp/>event,<sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sized_buffer<sp/>*sb_bot,<sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sized_buffer<sp/>*event_data);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="discord_8h_1ad49541dbe38d41a0c6f72392511ffe7f" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(<ref refid="discord_8h_1ad49541dbe38d41a0c6f72392511ffe7f" kindref="member">guild_role_cb</ref>)(</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">discord_user<sp/>*bot,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">discord_permissions_role<sp/>*role);</highlight></codeline>
<codeline lineno="110" refid="discord_8h_1a57231f38324853b103aaeead055fb668" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(<ref refid="discord_8h_1a57231f38324853b103aaeead055fb668" kindref="member">guild_role_delete_cb</ref>)(</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">discord_user<sp/>*bot,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>role_id);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="discord_8h_1a74d2fa7659645194427e13dc15490e45" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(<ref refid="discord_8h_1a74d2fa7659645194427e13dc15490e45" kindref="member">guild_member_cb</ref>)(</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">discord_user<sp/>*bot,<sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,<sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">discord_guild_member<sp/>*member);</highlight></codeline>
<codeline lineno="132" refid="discord_8h_1a22a5a8767f0b3e13675c765fdd439936" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(<ref refid="discord_8h_1a22a5a8767f0b3e13675c765fdd439936" kindref="member">guild_member_remove_cb</ref>)(</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">discord_user<sp/>*bot,<sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,<sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">discord_user<sp/>*user);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="discord_8h_1a9e932235fc87b6fd16d5fccfa139edd6" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(<ref refid="discord_8h_1a9e932235fc87b6fd16d5fccfa139edd6" kindref="member">guild_ban_cb</ref>)(</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">discord_user<sp/>*bot,<sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,<sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">discord_user<sp/>*user);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="discord_8h_1afff2ce011cd5b8d20b703fb01c105559" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(<ref refid="discord_8h_1afff2ce011cd5b8d20b703fb01c105559" kindref="member">message_cb</ref>)(</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">discord_user<sp/>*bot,<sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">discord_message<sp/>*message);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(sb_message_cb)(</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">discord_user<sp/>*bot,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sized_buffer<sp/>*sb_bot,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">discord_message<sp/>*message,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sized_buffer<sp/>*msg_payload);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="discord_8h_1a1a03c333f0c96ccfe855460837c39640" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(<ref refid="discord_8h_1a1a03c333f0c96ccfe855460837c39640" kindref="member">message_delete_cb</ref>)(</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">discord_user<sp/>*bot,<sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>id,<sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id);</highlight></codeline>
<codeline lineno="182" refid="discord_8h_1a875e7449cd237f26e535809bd0d5a3a8" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(<ref refid="discord_8h_1a875e7449cd237f26e535809bd0d5a3a8" kindref="member">message_delete_bulk_cb</ref>)(</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">discord_user<sp/>*bot,<sp/></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NTL_T(ja_u64)<sp/>ids,<sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="discord_8h_1ad256daeaf95441e9bebba72ed7532c93" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(<ref refid="discord_8h_1ad256daeaf95441e9bebba72ed7532c93" kindref="member">channel_cb</ref>)(</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">discord_user<sp/>*bot,<sp/></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">discord_channel<sp/>*channel);</highlight></codeline>
<codeline lineno="205" refid="discord_8h_1aa1e842764ae5f29946ffb777407c531e" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(<ref refid="discord_8h_1aa1e842764ae5f29946ffb777407c531e" kindref="member">channel_pins_update_cb</ref>)(</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">discord_user<sp/>*bot,<sp/></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a8c10c2449cb2148f47b8a032af96dd60" kindref="member">u64_unix_ms_t</ref><sp/>last_pin_timestamp);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="discord_8h_1a51d3f330bfd81a53015878b954183142" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(<ref refid="discord_8h_1a51d3f330bfd81a53015878b954183142" kindref="member">message_reaction_add_cb</ref>)(</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">discord_user<sp/>*bot,<sp/></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>user_id,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>message_id,<sp/></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,<sp/></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">discord_guild_member<sp/>*member,<sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">discord_emoji<sp/>*emoji);</highlight></codeline>
<codeline lineno="229" refid="discord_8h_1aa78388a1f092c880ef99029f1b383237" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(<ref refid="discord_8h_1aa78388a1f092c880ef99029f1b383237" kindref="member">message_reaction_remove_cb</ref>)(</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">discord_user<sp/>*bot,<sp/></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>user_id,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>message_id,<sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,<sp/></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">discord_emoji<sp/>*emoji);</highlight></codeline>
<codeline lineno="241" refid="discord_8h_1a19d3292473ccf8bdd8dc15a8aa9e9b33" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(<ref refid="discord_8h_1a19d3292473ccf8bdd8dc15a8aa9e9b33" kindref="member">message_reaction_remove_all_cb</ref>)(</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">discord_user<sp/>*bot,<sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>message_id,<sp/></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id);</highlight></codeline>
<codeline lineno="251" refid="discord_8h_1aaf01e5b91be0bc56135d1a2d7bede82e" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(<ref refid="discord_8h_1aaf01e5b91be0bc56135d1a2d7bede82e" kindref="member">message_reaction_remove_emoji_cb</ref>)(</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">discord_user<sp/>*bot,<sp/></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>message_id,<sp/></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">discord_emoji<sp/>*emoji);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="discord_8h_1a4734edb5ea9ea55094487d199227f943" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(<ref refid="discord_8h_1a4734edb5ea9ea55094487d199227f943" kindref="member">voice_state_update_cb</ref>)(</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">discord_user<sp/>*bot,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">discord_voice_state<sp/>*voice_state);</highlight></codeline>
<codeline lineno="271" refid="discord_8h_1aee86b0424b3c03c48b60fa99a0814d2f" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(<ref refid="discord_8h_1aee86b0424b3c03c48b60fa99a0814d2f" kindref="member">voice_server_update_cb</ref>)(</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">discord_user<sp/>*bot,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*token,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*endpoint);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="structdiscord__session" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdiscord__session" kindref="compound">discord_session</ref><sp/>{</highlight></codeline>
<codeline lineno="283" refid="structdiscord__session_1a648a47e6677960d196bd2211befdb386" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structdiscord__session_1a648a47e6677960d196bd2211befdb386" kindref="member">url</ref>[1024];<sp/></highlight></codeline>
<codeline lineno="284" refid="structdiscord__session_1aafff4dd17b58a28dcced218bff221c28" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structdiscord__session_1aafff4dd17b58a28dcced218bff221c28" kindref="member">shards</ref>;<sp/></highlight></codeline>
<codeline lineno="286" refid="structdiscord__session_1a0fac573c0cf60f932efe8d9af3f9090c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structdiscord__session_1a0fac573c0cf60f932efe8d9af3f9090c" kindref="member">total</ref>;<sp/></highlight></codeline>
<codeline lineno="287" refid="structdiscord__session_1a4e89634b6ecce479d6facd1818368570" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structdiscord__session_1a4e89634b6ecce479d6facd1818368570" kindref="member">remaining</ref>;<sp/></highlight></codeline>
<codeline lineno="288" refid="structdiscord__session_1a3cf47a1d9b25f83c9595005c650cb2a6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structdiscord__session_1a3cf47a1d9b25f83c9595005c650cb2a6" kindref="member">reset_after</ref>;<sp/></highlight></codeline>
<codeline lineno="289" refid="structdiscord__session_1a2eca2c731838c17b07d3dd4e6748e55a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structdiscord__session_1a2eca2c731838c17b07d3dd4e6748e55a" kindref="member">max_concurrency</ref>;<sp/></highlight></codeline>
<codeline lineno="291" refid="structdiscord__session_1a7858f2e7d038285ba3ba9cb17bdd7f78" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structdiscord__session_1a7858f2e7d038285ba3ba9cb17bdd7f78" kindref="member">concurrent</ref>;<sp/></highlight></codeline>
<codeline lineno="292" refid="structdiscord__session_1a19fe3e6bdb53524d79d1d135205b31aa" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="discord_8h_1a8c10c2449cb2148f47b8a032af96dd60" kindref="member">u64_unix_ms_t</ref><sp/><ref refid="structdiscord__session_1a19fe3e6bdb53524d79d1d135205b31aa" kindref="member">identify_tstamp</ref>;<sp/></highlight></codeline>
<codeline lineno="294" refid="structdiscord__session_1a45d1d545d8e6970ec32be7e8f28e188a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="discord_8h_1a8c10c2449cb2148f47b8a032af96dd60" kindref="member">u64_unix_ms_t</ref><sp/><ref refid="structdiscord__session_1a45d1d545d8e6970ec32be7e8f28e188a" kindref="member">event_tstamp</ref>;<sp/></highlight></codeline>
<codeline lineno="296" refid="structdiscord__session_1a75c02a30d5568a1ddcea46feef45583e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structdiscord__session_1a75c02a30d5568a1ddcea46feef45583e" kindref="member">event_count</ref>;<sp/></highlight></codeline>
<codeline lineno="297"><highlight class="normal">};</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="structdiscord__get__channel__messages__params" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdiscord__get__channel__messages__params" kindref="compound">discord_get_channel_messages_params</ref><sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>around;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>before;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>after;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>limit;<sp/></highlight><highlight class="comment">//<sp/>max<sp/>number<sp/>of<sp/>messages<sp/>(1-100)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal">};</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="structdiscord__create__message__params" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdiscord__create__message__params" kindref="compound">discord_create_message_params</ref><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>common<sp/>to<sp/>@b<sp/>application/json<sp/>and<sp/>@b<sp/>multipart/form-data<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="structdiscord__create__message__params_1ad37e7dc00bfba35b60e412eca42f7b96" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structdiscord__create__message__params_1ad37e7dc00bfba35b60e412eca42f7b96" kindref="member">content</ref>;<sp/></highlight></codeline>
<codeline lineno="317" refid="structdiscord__create__message__params_1a203cb4e6241783c653e85905b769b210" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structdiscord__create__message__params_1a203cb4e6241783c653e85905b769b210" kindref="member">nonce</ref>;<sp/></highlight></codeline>
<codeline lineno="318" refid="structdiscord__create__message__params_1a59a16fe3fe7a7b434ffc2ea9045a15a2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structdiscord__create__message__params_1a59a16fe3fe7a7b434ffc2ea9045a15a2" kindref="member">tts</ref>;<sp/></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>parameters<sp/>for<sp/>@b<sp/>application/json</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">discord_embed<sp/>*embed;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">discord_channel_allowed_mentions<sp/>*allowed_mentions;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">discord_message_reference<sp/>*message_reference;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>parameters<sp/>for<sp/>@b<sp/>multipart/form-data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>@note<sp/>if<sp/>just<sp/>name<sp/>field<sp/>is<sp/>set,<sp/>will<sp/>search<sp/>for<sp/>file<sp/>in<sp/>working<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="comment">//<sp/>FILE<sp/>STRUCT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="structdiscord__create__message__params_1a69305c4547bb2f287939d3846b7dfe72" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structdiscord__create__message__params_1a69305c4547bb2f287939d3846b7dfe72" kindref="member">name</ref>;<sp/></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structdiscord__create__message__params_1ad37e7dc00bfba35b60e412eca42f7b96" kindref="member">content</ref>;<sp/></highlight></codeline>
<codeline lineno="330" refid="structdiscord__create__message__params_1abf442ac5cf250cf57abd148daf9c09e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structdiscord__create__message__params_1abf442ac5cf250cf57abd148daf9c09e6" kindref="member">size</ref>;<sp/></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>}<sp/>file;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*payload_json;</highlight></codeline>
<codeline lineno="333"><highlight class="normal">};</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="structdiscord__edit__message__params" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdiscord__edit__message__params" kindref="compound">discord_edit_message_params</ref><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*content;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">discord_embed<sp/>*embed;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>discord_message_flags_code<sp/>*flags;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">discord_channel_allowed_mentions<sp/>*allowed_mentions;</highlight></codeline>
<codeline lineno="343"><highlight class="normal">};</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="348" refid="structdiscord__list__guild__members__params" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdiscord__list__guild__members__params" kindref="compound">discord_list_guild_members_params</ref><sp/>{</highlight></codeline>
<codeline lineno="349" refid="structdiscord__list__guild__members__params_1a9aaad1b32dfe0d79c3402711716c9856" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structdiscord__list__guild__members__params_1a9aaad1b32dfe0d79c3402711716c9856" kindref="member">limit</ref>;<sp/></highlight></codeline>
<codeline lineno="350" refid="structdiscord__list__guild__members__params_1a365fe17fca1305512fb92321e35f11b8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/><ref refid="structdiscord__list__guild__members__params_1a365fe17fca1305512fb92321e35f11b8" kindref="member">after</ref>;<sp/></highlight></codeline>
<codeline lineno="351"><highlight class="normal">};</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*<sp/>*<sp/>*<sp/>CLIENT<sp/>FUNCTIONS<sp/>*<sp/>*<sp/>*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a4df1c61716cd01011c7a7bde928a31ca" kindref="member">discord_global_init</ref>();</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1aee069a2483ef9bf92f56b492ebedf1d8" kindref="member">discord_global_cleanup</ref>();</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdiscord" kindref="compound">discord</ref>*<sp/><ref refid="discord_8h_1a445cca7dc5a28113760c7e55759845c7" kindref="member">discord_init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structdiscord_1af3d2fe931cc6c487fb42ce7fe8db71a5" kindref="member">token</ref>[]);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdiscord" kindref="compound">discord</ref>*<sp/><ref refid="discord_8h_1a23500a16c7afdb797c779b045ad20b10" kindref="member">discord_config_init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>config_file[]);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a009d0e352a30c00f8b4765712fcfa5a9" kindref="member">discord_cleanup</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1ad49194134d7b9e656d3a96cb0b60cfec" kindref="member">discord_add_intents</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>discord_gateway_intents<sp/>code);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1ac6a9d904378b46a72c64ade07ac02f43" kindref="member">discord_remove_intents</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>discord_gateway_intents<sp/>code);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a13d9f16d62fea7cebdb6c24d57f685a1" kindref="member">discord_set_prefix</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*prefix);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a996d04265f563d5be9c22cef411c11aa" kindref="member">discord_set_on_command</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*command,<sp/><ref refid="discord_8h_1afff2ce011cd5b8d20b703fb01c105559" kindref="member">message_cb</ref><sp/>*callback);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a31400dfa84052b6c393c77a8039774f6" kindref="member">discord_set_on_event_raw</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/><ref refid="discord_8h_1a9d756b50a8f1472d73e3dcc32625aa93" kindref="member">event_raw_cb</ref><sp/>*callback);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1aa4499d5d0c24387a5acda0ea4be576ca" kindref="member">discord_set_on_idle</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/><ref refid="discord_8h_1afc8f66a3993c5edb45a00ef997223d52" kindref="member">idle_cb</ref><sp/>*callback);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a99c81095365d9fb50a9bdcad36421677" kindref="member">discord_set_on_guild_role_create</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/><ref refid="discord_8h_1ad49541dbe38d41a0c6f72392511ffe7f" kindref="member">guild_role_cb</ref><sp/>*callback);</highlight></codeline>
<codeline lineno="465"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2cdda4d8b073432fc1b9a8d802fb090a" kindref="member">discord_set_on_guild_role_update</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/><ref refid="discord_8h_1ad49541dbe38d41a0c6f72392511ffe7f" kindref="member">guild_role_cb</ref><sp/>*callback);</highlight></codeline>
<codeline lineno="473"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a3fbe3c1f243fdfd000095c8220656c29" kindref="member">discord_set_on_guild_role_delete</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/><ref refid="discord_8h_1a57231f38324853b103aaeead055fb668" kindref="member">guild_role_delete_cb</ref><sp/>*callback);</highlight></codeline>
<codeline lineno="481"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a42bcf77e80f22f330046ce410e907b63" kindref="member">discord_set_on_guild_member_add</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/><ref refid="discord_8h_1a74d2fa7659645194427e13dc15490e45" kindref="member">guild_member_cb</ref><sp/>*callback);</highlight></codeline>
<codeline lineno="489"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a6fa77e5994396e14a7c2a272b58a845a" kindref="member">discord_set_on_guild_member_update</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/><ref refid="discord_8h_1a74d2fa7659645194427e13dc15490e45" kindref="member">guild_member_cb</ref><sp/>*callback);</highlight></codeline>
<codeline lineno="497"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1af467bc80ddced49e63c0ab72020f97f3" kindref="member">discord_set_on_guild_member_remove</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/><ref refid="discord_8h_1a22a5a8767f0b3e13675c765fdd439936" kindref="member">guild_member_remove_cb</ref><sp/>*callback);</highlight></codeline>
<codeline lineno="505"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a94472926020ef36799062255db81bec3" kindref="member">discord_set_on_guild_ban_add</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/><ref refid="discord_8h_1a9e932235fc87b6fd16d5fccfa139edd6" kindref="member">guild_ban_cb</ref><sp/>*callback);</highlight></codeline>
<codeline lineno="513"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a63c145f6ca3397795927f0e4ad09d93c" kindref="member">discord_set_on_guild_ban_remove</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/><ref refid="discord_8h_1a9e932235fc87b6fd16d5fccfa139edd6" kindref="member">guild_ban_cb</ref><sp/>*callback);</highlight></codeline>
<codeline lineno="521"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1af3e3e920824c65e23bcc47e62cf906c4" kindref="member">discord_set_on_channel_create</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/><ref refid="discord_8h_1ad256daeaf95441e9bebba72ed7532c93" kindref="member">channel_cb</ref><sp/>*callback);</highlight></codeline>
<codeline lineno="529"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a0c5c1e50ad4749a2dc7143030ef89d47" kindref="member">discord_set_on_channel_update</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/><ref refid="discord_8h_1ad256daeaf95441e9bebba72ed7532c93" kindref="member">channel_cb</ref><sp/>*callback);</highlight></codeline>
<codeline lineno="537"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a492b849d1661a82ff8ca16c3e829ddc6" kindref="member">discord_set_on_channel_delete</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/><ref refid="discord_8h_1ad256daeaf95441e9bebba72ed7532c93" kindref="member">channel_cb</ref><sp/>*callback);</highlight></codeline>
<codeline lineno="545"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1ab6e438a4977ee90ddaef9593aa393c38" kindref="member">discord_set_on_channel_pins_update</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/><ref refid="discord_8h_1aa1e842764ae5f29946ffb777407c531e" kindref="member">channel_pins_update_cb</ref><sp/>*callback);</highlight></codeline>
<codeline lineno="553"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a16522ff016965c092436ceedb1d6da97" kindref="member">discord_set_on_message_create</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/><ref refid="discord_8h_1afff2ce011cd5b8d20b703fb01c105559" kindref="member">message_cb</ref><sp/>*callback);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>discord_set_on_sb_message_create(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/>sb_message_cb<sp/>*callback);</highlight></codeline>
<codeline lineno="562"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a1bcf72b1836cbcd0ec8b197c156795cb" kindref="member">discord_set_on_message_update</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/><ref refid="discord_8h_1afff2ce011cd5b8d20b703fb01c105559" kindref="member">message_cb</ref><sp/>*callback);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>discord_set_on_sb_message_update(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/>sb_message_cb<sp/>*callback);</highlight></codeline>
<codeline lineno="571"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a72c3f46afdb0cf603ba426ae08bcadab" kindref="member">discord_set_on_message_delete</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/><ref refid="discord_8h_1a1a03c333f0c96ccfe855460837c39640" kindref="member">message_delete_cb</ref><sp/>*callback);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="573"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Set<sp/>a<sp/>callback<sp/>that<sp/>triggers<sp/>when<sp/>a<sp/>bulk<sp/>of<sp/>messages<sp/>are<sp/>deleted</highlight></codeline>
<codeline lineno="574"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="575"><highlight class="comment"><sp/>*<sp/>@param<sp/>client<sp/>the<sp/>client<sp/>created<sp/>with<sp/>discord_init()</highlight></codeline>
<codeline lineno="576"><highlight class="comment"><sp/>*<sp/>@param<sp/>callback<sp/>the<sp/>callback<sp/>that<sp/>will<sp/>be<sp/>executed</highlight></codeline>
<codeline lineno="577"><highlight class="comment"><sp/>*<sp/>@note<sp/>this<sp/>function<sp/>will<sp/>automatically<sp/>set<sp/>intent(s)<sp/>to<sp/>make<sp/>the<sp/>callback<sp/>triggerable</highlight></codeline>
<codeline lineno="578"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>discord_set_on_message_delete_bulk(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/><ref refid="discord_8h_1a875e7449cd237f26e535809bd0d5a3a8" kindref="member">message_delete_bulk_cb</ref><sp/>*callback);</highlight></codeline>
<codeline lineno="587"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a9b6bf9e15ae6c2fe82f6c6bd1f4fc6c6" kindref="member">discord_set_on_message_reaction_add</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/><ref refid="discord_8h_1a51d3f330bfd81a53015878b954183142" kindref="member">message_reaction_add_cb</ref><sp/>*callback);</highlight></codeline>
<codeline lineno="595"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a76d53c80811f15b746ea0c9e13aac2e3" kindref="member">discord_set_on_message_reaction_remove</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/><ref refid="discord_8h_1aa78388a1f092c880ef99029f1b383237" kindref="member">message_reaction_remove_cb</ref><sp/>*callback);</highlight></codeline>
<codeline lineno="603"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a69dc994bf6f5131411341cc43622bc26" kindref="member">discord_set_on_message_reaction_remove_all</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/><ref refid="discord_8h_1a19d3292473ccf8bdd8dc15a8aa9e9b33" kindref="member">message_reaction_remove_all_cb</ref>*<sp/>callback);</highlight></codeline>
<codeline lineno="611"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2d213631154c13a336eb10ea607c775b" kindref="member">discord_set_on_message_reaction_remove_emoji</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/><ref refid="discord_8h_1aaf01e5b91be0bc56135d1a2d7bede82e" kindref="member">message_reaction_remove_emoji_cb</ref><sp/>*callback);</highlight></codeline>
<codeline lineno="619"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a23f17f54bfca2562a453ea58d49e91ae" kindref="member">discord_set_on_ready</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/><ref refid="discord_8h_1afc8f66a3993c5edb45a00ef997223d52" kindref="member">idle_cb</ref><sp/>*callback);</highlight></codeline>
<codeline lineno="627"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a5347137109bd6e433587c7fb10752c68" kindref="member">discord_set_on_voice_state_update</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/><ref refid="discord_8h_1a4734edb5ea9ea55094487d199227f943" kindref="member">voice_state_update_cb</ref><sp/>*callback);</highlight></codeline>
<codeline lineno="635"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1ac43f3a0ac189d07a6b9a83c3dec48420" kindref="member">discord_set_on_voice_server_update</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/><ref refid="discord_8h_1aee86b0424b3c03c48b60fa99a0814d2f" kindref="member">voice_server_update_cb</ref><sp/>*callback);</highlight></codeline>
<codeline lineno="642"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a3d7c81f03f681c7e5671489b8160aec7" kindref="member">discord_set_voice_cbs</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord__voice__cbs" kindref="compound">discord_voice_cbs</ref><sp/>*callbacks);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644" refid="discord_8h_1a1b11a8fb0bb025f18e2b7b207979b314" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a1b11a8fb0bb025f18e2b7b207979b314" kindref="member">discord_event_handling_mode</ref><sp/>{</highlight></codeline>
<codeline lineno="645" refid="discord_8h_1a1b11a8fb0bb025f18e2b7b207979b314a175d5035ef61079f0ddd410b4dc9eaca" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="discord_8h_1a1b11a8fb0bb025f18e2b7b207979b314a175d5035ef61079f0ddd410b4dc9eaca" kindref="member">EVENT_IS_HANDLED</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="646" refid="discord_8h_1a1b11a8fb0bb025f18e2b7b207979b314a3bd84c32d5d80fe2635d4629e407637e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="discord_8h_1a1b11a8fb0bb025f18e2b7b207979b314a3bd84c32d5d80fe2635d4629e407637e" kindref="member">EVENT_WILL_BE_HANDLED_IN_MAIN_THREAD</ref>,<sp/></highlight></codeline>
<codeline lineno="647" refid="discord_8h_1a1b11a8fb0bb025f18e2b7b207979b314a2d6c7875eaa5d6caf320674bbe4392e4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="discord_8h_1a1b11a8fb0bb025f18e2b7b207979b314a2d6c7875eaa5d6caf320674bbe4392e4" kindref="member">EVENT_WILL_BE_HANDLED_IN_CHILD_THREAD</ref><sp/></highlight></codeline>
<codeline lineno="648"><highlight class="normal">};</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>discord_set_blocking_event_handler(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a1b11a8fb0bb025f18e2b7b207979b314" kindref="member">discord_event_handling_mode</ref><sp/>(*f)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*cxt));</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1ae0e3bf4cdf86e1737d53e16b802fc186" kindref="member">discord_run</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="discord_8h_1a2fe34375b2ce557d8ac84a0794063b78" kindref="member">discord_set_data</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structdiscord_1ad36541f87b8997a57c0467d29627e8d1" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="discord_8h_1af7534e0384766754eeb77f573dac1a84" kindref="member">discord_get_data</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1ac29f8303759532bce1df09376a80e6ab" kindref="member">discord_replace_presence</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_gateway_status_update<sp/>*presence);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a09fa023f7aab5b9a053250115f1af903" kindref="member">discord_set_presence</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_gateway_activity<sp/>*activity,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>status[],<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>afk);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*<sp/>*<sp/>*<sp/>ENDPOINT<sp/>FUNCTIONS<sp/>*<sp/>*<sp/>*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight><highlight class="comment">//<sp/>AUDIT<sp/>LOG<sp/>ENDPOINTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal">ORCAcode<sp/>discord_get_guild_audit_log(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_get_guild_audit_log_params<sp/>*params,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_audit_log<sp/>*p_audit_log);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CHANNEL<sp/>ENDPOINTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal">ORCAcode<sp/>discord_get_channel(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_channel<sp/>*p_channel);</highlight></codeline>
<codeline lineno="711"><highlight class="normal">ORCAcode<sp/>discord_modify_channel(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_modify_channel_params<sp/>*params,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_channel<sp/>*p_channel);</highlight></codeline>
<codeline lineno="712"><highlight class="normal">ORCAcode<sp/>discord_delete_channel(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_channel<sp/>*p_channel);</highlight></codeline>
<codeline lineno="713"><highlight class="normal">ORCAcode<sp/>discord_get_channel_messages(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord__get__channel__messages__params" kindref="compound">discord_get_channel_messages_params</ref><sp/>*params,<sp/>NTL_T(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_message)<sp/>*p_messages);</highlight></codeline>
<codeline lineno="714"><highlight class="normal">ORCAcode<sp/>discord_get_channel_message(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>message_id,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_message<sp/>*p_message);</highlight></codeline>
<codeline lineno="715"><highlight class="normal">ORCAcode<sp/>discord_create_message(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord__create__message__params" kindref="compound">discord_create_message_params</ref><sp/>*params,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_message<sp/>*p_message);</highlight></codeline>
<codeline lineno="716"><highlight class="normal">ORCAcode<sp/>discord_crosspost_message(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>message_id,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_message<sp/>*p_message);</highlight></codeline>
<codeline lineno="717"><highlight class="normal">ORCAcode<sp/>discord_create_reaction(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>message_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>emoji_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>emoji_name[]);</highlight></codeline>
<codeline lineno="718"><highlight class="normal">ORCAcode<sp/>discord_delete_own_reaction(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>message_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>emoji_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>emoji_name[]);</highlight></codeline>
<codeline lineno="719"><highlight class="normal">ORCAcode<sp/>discord_delete_user_reaction(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>message_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>user_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>emoji_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>emoji_name[]);</highlight></codeline>
<codeline lineno="720"><highlight class="normal">ORCAcode<sp/>discord_get_reactions(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>message_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>emoji_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>emoji_name[],<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_get_reactions_params<sp/>*params,<sp/>NTL_T(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_user)<sp/>*p_users);</highlight></codeline>
<codeline lineno="721"><highlight class="normal">ORCAcode<sp/>discord_delete_all_reactions(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>message_id);</highlight></codeline>
<codeline lineno="722"><highlight class="normal">ORCAcode<sp/>discord_delete_all_reactions_for_emoji(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>message_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>emoji_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>emoji_name[]);</highlight></codeline>
<codeline lineno="723"><highlight class="normal">ORCAcode<sp/>discord_edit_message(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>message_id,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord__edit__message__params" kindref="compound">discord_edit_message_params</ref><sp/>*params,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_message<sp/>*p_message);</highlight></codeline>
<codeline lineno="724"><highlight class="normal">ORCAcode<sp/>discord_delete_message(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>message_id);</highlight></codeline>
<codeline lineno="725"><highlight class="normal">ORCAcode<sp/>discord_bulk_delete_messages(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/>NTL_T(<ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref>)<sp/>messages);</highlight></codeline>
<codeline lineno="726"><highlight class="normal">ORCAcode<sp/>discord_edit_channel_permissions(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>overwrite_id,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_edit_channel_permissions_params<sp/>*params);</highlight></codeline>
<codeline lineno="727"><highlight class="normal">ORCAcode<sp/>discord_get_channel_invites(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/>NTL_T(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_invite)<sp/>*p_invites);</highlight></codeline>
<codeline lineno="728"><highlight class="normal">ORCAcode<sp/>discord_create_channel_invite(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_create_channel_invite_params<sp/>*params,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_invite<sp/>*p_invite);</highlight></codeline>
<codeline lineno="729"><highlight class="normal">ORCAcode<sp/>discord_delete_channel_permission(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>overwrite_id);</highlight></codeline>
<codeline lineno="730"><highlight class="normal">ORCAcode<sp/>discord_trigger_typing_indicator(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref>*<sp/>client,<sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id);</highlight></codeline>
<codeline lineno="731"><highlight class="normal">ORCAcode<sp/>discord_follow_news_channel(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_follow_news_channel_params<sp/>*params,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_channel<sp/>*p_followed_channel);</highlight></codeline>
<codeline lineno="732"><highlight class="normal">ORCAcode<sp/>discord_get_pinned_messages(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/>NTL_T(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_message)<sp/>*p_messages);</highlight></codeline>
<codeline lineno="733"><highlight class="normal">ORCAcode<sp/>discord_pin_message(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>message_id);</highlight></codeline>
<codeline lineno="734"><highlight class="normal">ORCAcode<sp/>discord_unpin_message(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>message_id);</highlight></codeline>
<codeline lineno="735"><highlight class="normal">ORCAcode<sp/>discord_group_dm_add_recipient(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>user_id,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_group_dm_add_recipient_params<sp/>*params);</highlight></codeline>
<codeline lineno="736"><highlight class="normal">ORCAcode<sp/>discord_group_dm_remove_recipient(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>user_id);</highlight></codeline>
<codeline lineno="737"><highlight class="normal">ORCAcode<sp/>discord_start_thread_with_message(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>message_id,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_start_thread_with_message_params<sp/>*params,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_channel<sp/>*p_channel);</highlight></codeline>
<codeline lineno="738"><highlight class="normal">ORCAcode<sp/>discord_start_thread_without_message(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_start_thread_without_message_params<sp/>*params,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_channel<sp/>*p_channel);</highlight></codeline>
<codeline lineno="739"><highlight class="normal">ORCAcode<sp/>discord_join_thread(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id);</highlight></codeline>
<codeline lineno="740"><highlight class="normal">ORCAcode<sp/>discord_add_thread_member(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>user_id);</highlight></codeline>
<codeline lineno="741"><highlight class="normal">ORCAcode<sp/>discord_leave_thread(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id);</highlight></codeline>
<codeline lineno="742"><highlight class="normal">ORCAcode<sp/>discord_remove_thread_member(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>user_id);</highlight></codeline>
<codeline lineno="743"><highlight class="normal">ORCAcode<sp/>discord_list_thread_members(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/>NTL_T(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_thread_member)<sp/>*p_thread_members);</highlight></codeline>
<codeline lineno="744"><highlight class="normal">ORCAcode<sp/>discord_list_active_threads(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_thread_response_body<sp/>*body);</highlight></codeline>
<codeline lineno="745"><highlight class="normal">ORCAcode<sp/>discord_list_public_archived_threads(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a8c10c2449cb2148f47b8a032af96dd60" kindref="member">u64_unix_ms_t</ref><sp/>before,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>limit,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_thread_response_body<sp/>*body);</highlight></codeline>
<codeline lineno="746"><highlight class="normal">ORCAcode<sp/>discord_list_private_archived_threads(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a8c10c2449cb2148f47b8a032af96dd60" kindref="member">u64_unix_ms_t</ref><sp/>before,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>limit,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_thread_response_body<sp/>*body);</highlight></codeline>
<codeline lineno="747"><highlight class="normal">ORCAcode<sp/>discord_list_joined_private_archived_threads(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a8c10c2449cb2148f47b8a032af96dd60" kindref="member">u64_unix_ms_t</ref><sp/>before,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>limit,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_thread_response_body<sp/>*body);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EMOJI<sp/>ENDPOINTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal">ORCAcode<sp/>discord_list_guild_emojis(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,<sp/>NTL_T(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_emoji)<sp/>*p_emojis);</highlight></codeline>
<codeline lineno="751"><highlight class="normal">ORCAcode<sp/>discord_get_guild_emoji(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>emoji_id,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_emoji<sp/>*p_emoji);</highlight></codeline>
<codeline lineno="752"><highlight class="normal">ORCAcode<sp/>discord_create_guild_emoji(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_create_guild_emoji_params<sp/>*params,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_emoji<sp/>*p_emoji);</highlight></codeline>
<codeline lineno="753"><highlight class="normal">ORCAcode<sp/>discord_modify_guild_emoji(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>emoji_id,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_modify_guild_emoji_params<sp/>*params,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_emoji<sp/>*p_emoji);</highlight></codeline>
<codeline lineno="754"><highlight class="normal">ORCAcode<sp/>discord_delete_guild_emoji(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>emoji_id);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GUILD<sp/>ENDPOINTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal">ORCAcode<sp/>discord_create_guild(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_create_guild_params<sp/>*params,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_guild<sp/>*p_guild);</highlight></codeline>
<codeline lineno="758"><highlight class="normal">ORCAcode<sp/>discord_get_guild(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_guild<sp/>*p_guild);</highlight></codeline>
<codeline lineno="759"><highlight class="normal">ORCAcode<sp/>discord_get_guild_preview(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_guild_preview<sp/>*p_guild_preview);</highlight></codeline>
<codeline lineno="760"><highlight class="normal">ORCAcode<sp/>discord_modify_guild(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_modify_guild_params<sp/>*params,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_guild<sp/>*p_guild);</highlight></codeline>
<codeline lineno="761"><highlight class="normal">ORCAcode<sp/>discord_delete_guild(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id);</highlight></codeline>
<codeline lineno="762"><highlight class="normal">ORCAcode<sp/>discord_get_guild_channels(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,<sp/>NTL_T(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_channel)<sp/>*p_channels);</highlight></codeline>
<codeline lineno="763"><highlight class="normal">ORCAcode<sp/>discord_create_guild_channel(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_create_guild_channel_params<sp/>*params,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_channel<sp/>*p_channel);</highlight></codeline>
<codeline lineno="764"><highlight class="normal">ORCAcode<sp/>discord_modify_guild_channel_positions(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,<sp/>NTL_T(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_modify_guild_channel_positions_params)<sp/>params);</highlight></codeline>
<codeline lineno="765"><highlight class="normal">ORCAcode<sp/><sp/>discord_get_guild_member(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,<sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>user_id,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_guild_member<sp/>*p_member);</highlight></codeline>
<codeline lineno="766"><highlight class="normal">ORCAcode<sp/>discord_list_guild_members(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord__list__guild__members__params" kindref="compound">discord_list_guild_members_params</ref><sp/>*params,<sp/>NTL_T(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_guild_member)<sp/>*p_members);</highlight></codeline>
<codeline lineno="767"><highlight class="normal">ORCAcode<sp/>discord_search_guild_members(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_search_guild_members_params<sp/>*params,<sp/>NTL_T(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_guild_member)<sp/>*p_members);</highlight></codeline>
<codeline lineno="768"><highlight class="normal">ORCAcode<sp/>discord_modify_guild_member(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>user_id,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_modify_guild_member_params<sp/>*params,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_guild_member<sp/>*p_member);</highlight></codeline>
<codeline lineno="769"><highlight class="normal">ORCAcode<sp/>discord_add_guild_member(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>user_id,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_add_guild_member_params<sp/>*params,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_guild_member<sp/>*p_member);</highlight></codeline>
<codeline lineno="770"><highlight class="normal">ORCAcode<sp/>discord_modify_current_user_nick(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>nick[]);</highlight></codeline>
<codeline lineno="771"><highlight class="normal">ORCAcode<sp/>discord_add_guild_member_role(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>user_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>role_id);</highlight></codeline>
<codeline lineno="772"><highlight class="normal">ORCAcode<sp/>discord_remove_guild_member_role(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>user_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>role_id);</highlight></codeline>
<codeline lineno="773"><highlight class="normal">ORCAcode<sp/>discord_remove_guild_member(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>user_id);</highlight></codeline>
<codeline lineno="774"><highlight class="normal">ORCAcode<sp/>discord_get_guild_bans(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,<sp/>NTL_T(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_guild_ban)<sp/>*p_bans);</highlight></codeline>
<codeline lineno="775"><highlight class="normal">ORCAcode<sp/>discord_get_guild_ban(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>user_id,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_guild_ban<sp/>*p_ban);</highlight></codeline>
<codeline lineno="776"><highlight class="normal">ORCAcode<sp/>discord_create_guild_ban(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>user_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>delete_message_days,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>reason[]);</highlight></codeline>
<codeline lineno="777"><highlight class="normal">ORCAcode<sp/>discord_remove_guild_ban(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>user_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>reason[]);</highlight></codeline>
<codeline lineno="778"><highlight class="normal">ORCAcode<sp/>discord_get_guild_roles(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,<sp/>NTL_T(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_permissions_role)<sp/>*p_roles);</highlight></codeline>
<codeline lineno="779"><highlight class="normal">ORCAcode<sp/>discord_create_guild_role(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_create_guild_role_params<sp/>*params,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_permissions_role<sp/>*p_role);</highlight></codeline>
<codeline lineno="780"><highlight class="normal">ORCAcode<sp/>discord_modify_guild_role_positions(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,<sp/>NTL_T(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_modify_guild_role_positions_params)<sp/>params,<sp/>NTL_T(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_permissions_role)<sp/>*p_roles);</highlight></codeline>
<codeline lineno="781"><highlight class="normal">ORCAcode<sp/>discord_modify_guild_role(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>role_id,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_modify_guild_role_params<sp/>*params,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_permissions_role<sp/>*p_role);</highlight></codeline>
<codeline lineno="782"><highlight class="normal">ORCAcode<sp/>discord_delete_guild_role(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>role_id);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight><highlight class="comment">//<sp/>INVITE<sp/>ENDPOINTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal">ORCAcode<sp/>discord_get_invite(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*invite_code,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_get_invite_params<sp/>*params,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_invite<sp/>*p_invite);</highlight></codeline>
<codeline lineno="786"><highlight class="normal">ORCAcode<sp/>discord_delete_invite(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*invite_code,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_invite<sp/>*p_invite);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight><highlight class="comment">//<sp/>USER<sp/>ENDPOINTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal">ORCAcode<sp/>discord_get_user(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>user_id,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_user<sp/>*p_user);</highlight></codeline>
<codeline lineno="790"><highlight class="normal">ORCAcode<sp/>discord_modify_current_user(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_modify_current_user_params<sp/>*params,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_user<sp/>*p_user);</highlight></codeline>
<codeline lineno="791"><highlight class="normal">ORCAcode<sp/>discord_get_current_user(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_user<sp/>*p_user);</highlight></codeline>
<codeline lineno="792"><highlight class="normal">ORCAcode<sp/>sb_discord_get_current_user(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sized_buffer<sp/>*p_sb_user);</highlight></codeline>
<codeline lineno="793"><highlight class="normal">ORCAcode<sp/>discord_get_current_user_guilds(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/>NTL_T(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_guild)<sp/>*p_guilds);</highlight></codeline>
<codeline lineno="794"><highlight class="normal">ORCAcode<sp/>discord_leave_guild(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id);</highlight></codeline>
<codeline lineno="795"><highlight class="normal">ORCAcode<sp/>discord_create_dm(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>recipient_id,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_channel<sp/>*p_dm_channel);</highlight></codeline>
<codeline lineno="796"><highlight class="normal">ORCAcode<sp/>discord_create_group_dm(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_create_group_dm_params<sp/>*params,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_channel<sp/>*p_dm_channel);</highlight></codeline>
<codeline lineno="797"><highlight class="normal">ORCAcode<sp/>discord_get_user_connections(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/>NTL_T(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_connection)<sp/>*p_connections);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight><highlight class="comment">//<sp/>VOICE<sp/>ENDPOINTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal">ORCAcode<sp/>discord_list_voice_regions(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/>NTL_T(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_voice_region)<sp/>*p_voice_regions);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GATEWAY<sp/>ENDPOINTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal">ORCAcode<sp/>discord_get_gateway(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord__session" kindref="compound">discord_session</ref><sp/>*p_session);</highlight></codeline>
<codeline lineno="804"><highlight class="normal">ORCAcode<sp/>discord_get_gateway_bot(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord__session" kindref="compound">discord_session</ref><sp/>*p_session);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*<sp/>*<sp/>*<sp/>MISCELLANEOUS<sp/>FUNCTIONS<sp/>*<sp/>*<sp/>*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EMBED<sp/>MISC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>discord_embed_set_thumbnail(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_embed<sp/>*embed,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>url[],<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>proxy_url[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>discord_embed_set_image(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_embed<sp/>*embed,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>url[],<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>proxy_url[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>discord_embed_set_video(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_embed<sp/>*embed,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>url[],<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>proxy_url[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>discord_embed_set_footer(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_embed<sp/>*embed,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>text[],<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>icon_url[],<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>proxy_icon_url[]);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>discord_embed_set_provider(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_embed<sp/>*embed,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>name[],<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>url[]);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>discord_embed_set_author(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_embed<sp/>*embed,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>name[],<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>url[],<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>icon_url[],<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>proxy_icon_url[]);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>discord_embed_add_field(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_embed<sp/>*embed,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>name[],<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>value[],<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Inline);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CHANNEL<sp/>MISC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>discord_overwrite_append(NTL_T(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_channel_overwrite)<sp/>*permission_overwrites,<sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>discord_permissions_bitwise_flags<sp/>allow,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>discord_permissions_bitwise_flags<sp/>deny);</highlight></codeline>
<codeline lineno="821"><highlight class="normal">ORCAcode<sp/>discord_get_channel_at_pos(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>discord_channel_types<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>position,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_channel<sp/>*p_channel);</highlight></codeline>
<codeline lineno="822"><highlight class="normal">ORCAcode<sp/>discord_delete_messages_by_author_id(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>channel_id,<sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>author_id);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GUILD<sp/>MISC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal">ORCAcode<sp/>discord_disconnect_guild_member(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdiscord" kindref="compound">discord</ref><sp/>*client,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>guild_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="discord_8h_1a2aca4957fe0e14f7ab03fdaeb17d8fb9" kindref="member">u64_snowflake_t</ref><sp/>user_id,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>discord_guild_member<sp/>*p_member);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DISCORD_ADD_ONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;discord-voice-connections.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>DISCORD_H</highlight></codeline>
    </programlisting>
    <location file="/home/lucasmull/Trabalho/orca/discord.h"/>
  </compounddef>
</doxygen>
